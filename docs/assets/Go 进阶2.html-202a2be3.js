const t=JSON.parse('{"key":"v-f02b1dd4","path":"/posts/%E5%90%8E%E7%AB%AF/Go/Go%20%E8%BF%9B%E9%98%B62.html","title":"Go 进阶2","lang":"en-US","frontmatter":{"icon":"article","date":"2022-01-10T00:00:00.000Z","title":"Go 进阶2","category":["后端","Go"],"tag":["Go 进阶2"],"description":"知识 context context实例不可变，每次调用api，都会返回一个新创建的ctx 父级ctx控制底下所有子ctx,而子ctx连自己的父亲是谁都不清楚，因此父ctx错误，所有子ctx都错误，而子ctx错误不会影响到父ctx 可用于业务超时控制 WithTimeout 超时给ctx发送错误 context.Err context的管道没关闭前都返回nil, 关闭后会根据对应情况返回不同的错误","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%90%8E%E7%AB%AF/Go/Go%20%E8%BF%9B%E9%98%B62.html"}],["meta",{"property":"og:site_name","content":"unitiny的宇宙"}],["meta",{"property":"og:title","content":"Go 进阶2"}],["meta",{"property":"og:description","content":"知识 context context实例不可变，每次调用api，都会返回一个新创建的ctx 父级ctx控制底下所有子ctx,而子ctx连自己的父亲是谁都不清楚，因此父ctx错误，所有子ctx都错误，而子ctx错误不会影响到父ctx 可用于业务超时控制 WithTimeout 超时给ctx发送错误 context.Err context的管道没关闭前都返回nil, 关闭后会根据对应情况返回不同的错误"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-25T09:20:57.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Go 进阶2"}],["meta",{"property":"article:author","content":"unitiny"}],["meta",{"property":"article:tag","content":"Go 进阶2"}],["meta",{"property":"article:published_time","content":"2022-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-25T09:20:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Go 进阶2\\",\\"image\\":[\\"https://mister-hope.github.io/\\"],\\"datePublished\\":\\"2022-01-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-25T09:20:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"unitiny\\",\\"url\\":\\"#\\"}]}"]]},"headers":[{"level":2,"title":"知识","slug":"知识","link":"#知识","children":[{"level":3,"title":"context","slug":"context","link":"#context","children":[]},{"level":3,"title":"sync","slug":"sync","link":"#sync","children":[]}]},{"level":2,"title":"功能","slug":"功能","link":"#功能","children":[{"level":3,"title":"优雅退出服务器","slug":"优雅退出服务器","link":"#优雅退出服务器","children":[]}]}],"git":{"createdTime":1721899257000,"updatedTime":1721899257000,"contributors":[{"name":"unitiny","email":"2069234934@qq.com","commits":1}]},"readingTime":{"minutes":1.53,"words":460},"filePathRelative":"posts/后端/Go/Go 进阶2.md","localizedDate":"January 10, 2022","excerpt":"<h2> 知识</h2>\\n<h3> context</h3>\\n<ul>\\n<li>context实例不可变，每次调用api，都会返回一个新创建的ctx</li>\\n<li>父级ctx控制底下所有子ctx,而子ctx连自己的父亲是谁都不清楚，因此父ctx错误，所有子ctx都错误，而子ctx错误不会影响到父ctx</li>\\n<li>可用于业务超时控制</li>\\n</ul>\\n<h4> WithTimeout</h4>\\n<p>超时给ctx发送错误</p>\\n<h4> context.Err</h4>\\n<p>context的管道没关闭前都返回nil,</p>\\n<p>关闭后会根据对应情况返回不同的错误</p>\\n","autoDesc":true}');export{t as data};
