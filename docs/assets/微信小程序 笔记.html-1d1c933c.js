import{_ as s,W as t,X as i,Y as a,Z as r,a0 as c,a2 as n,C as d}from"./framework-5d92cd28.js";const p={},l=n(`<h1 id="微信小程序-笔记" tabindex="-1"><a class="header-anchor" href="#微信小程序-笔记" aria-hidden="true">#</a> 微信小程序 笔记</h1><hr><h2 id="使用及插件" tabindex="-1"><a class="header-anchor" href="#使用及插件" aria-hidden="true">#</a> 使用及插件：</h2><h3 id="css-tree-插件-在扩展程序中搜索安装" tabindex="-1"><a class="header-anchor" href="#css-tree-插件-在扩展程序中搜索安装" aria-hidden="true">#</a> css tree 插件 ，在扩展程序中搜索安装</h3><p>介绍：快速获取div的class名称</p><p>使用：ctrl+shift+p</p><h2 id="语法类" tabindex="-1"><a class="header-anchor" href="#语法类" aria-hidden="true">#</a> 语法类</h2><h3 id="view-100-会生成100个view-标签" tabindex="-1"><a class="header-anchor" href="#view-100-会生成100个view-标签" aria-hidden="true">#</a> view{$}*100 会生成100个view 标签</h3><h3 id="包裹一个代码块-通常放置wx-if-显示一大块面板" tabindex="-1"><a class="header-anchor" href="#包裹一个代码块-通常放置wx-if-显示一大块面板" aria-hidden="true">#</a> 包裹一个代码块，通常放置wx:if，显示一大块面板</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>block</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>block</span><span class="token punctuation">&gt;</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h6><h3 id="第二行省略号隐藏功能-对view有效-text无效" tabindex="-1"><a class="header-anchor" href="#第二行省略号隐藏功能-对view有效-text无效" aria-hidden="true">#</a> 第二行省略号隐藏功能，对view有效，text无效</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> display: -webkit-box;
 overflow: hidden;
 -webkit-box-orient: vertical;
 -webkit-line-clamp: 2;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="-1" tabindex="-1"><a class="header-anchor" href="#-1" aria-hidden="true">#</a></h6><h3 id="scope-address属性名怪异-含-要-包裹起来使其合法" tabindex="-1"><a class="header-anchor" href="#scope-address属性名怪异-含-要-包裹起来使其合法" aria-hidden="true">#</a> scope.address属性名怪异，含.，要[]包裹起来使其合法</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>const scopeAdress=result.authSetting[&#39;scope.address&#39;]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="生命周期函数" tabindex="-1"><a class="header-anchor" href="#生命周期函数" aria-hidden="true">#</a> 生命周期函数</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>onShow()       //每次页面显示都会调用

onLoad()  	   //只有加载该页面时才会调用

//从二级页面返回该页面时，onLoad不会再次加载，而onshow会重新加载
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="every方法" tabindex="-1"><a class="header-anchor" href="#every方法" aria-hidden="true">#</a> every方法</h3><p>遍历数组对象 若所有返回值都为true输出才为true 否则false</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> checkedAll <span class="token operator">=</span> cart<span class="token punctuation">.</span>length <span class="token operator">?</span> cart<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>isChecked<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="-2" tabindex="-1"><a class="header-anchor" href="#-2" aria-hidden="true">#</a></h5><h2 id="遇到问题和bug" tabindex="-1"><a class="header-anchor" href="#遇到问题和bug" aria-hidden="true">#</a> 遇到问题和bug</h2><h3 id="当文件夹与文件同名时-components组件可能不显示" tabindex="-1"><a class="header-anchor" href="#当文件夹与文件同名时-components组件可能不显示" aria-hidden="true">#</a> 当文件夹与文件同名时，components组件可能不显示</h3><p>办法：重命名文件夹即可</p><h3 id="wxss计算高度表达式" tabindex="-1"><a class="header-anchor" href="#wxss计算高度表达式" aria-hidden="true">#</a> wxss计算高度表达式</h3><p>wxss计算高度表达式复杂时要加括号以免没计算出结果</p><p>用calc()计算时 空格尤其重要，有无会影响结果的成功</p><h3 id="报错-cart-foreach-is-not-a-function" tabindex="-1"><a class="header-anchor" href="#报错-cart-foreach-is-not-a-function" aria-hidden="true">#</a> 报错 ：cart.forEach is not a function</h3><p>原因 : cart是通过wx.getStorageSync获取的，得到的cart不是一个数组</p><p>解决 : 在赋值cart 处用 Array.from 数组化</p><h3 id="components下的组件向父组件传递事件参数" tabindex="-1"><a class="header-anchor" href="#components下的组件向父组件传递事件参数" aria-hidden="true">#</a> components下的组件向父组件传递事件参数：</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">triggerEvent</span><span class="token punctuation">(</span><span class="token string">&#39;handleTabItemChange&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//父组件接收：</span>
bindhandleTabItemChange<span class="token operator">=</span><span class="token string">&quot;handleTab&quot;</span>

<span class="token comment">//注意 bind后面事件要与triggerEvent的事件一致，即要绑定的是自定义事件，</span>
<span class="token comment">//handleTab才是父组件的js事件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="replace替换文本时不生效-原因没有重新赋值" tabindex="-1"><a class="header-anchor" href="#replace替换文本时不生效-原因没有重新赋值" aria-hidden="true">#</a> replace替换文本时不生效，原因没有重新赋值</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>swiperList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>navigator_url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">main</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//错误，没赋值</span>
swiperList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>navigator_url <span class="token operator">=</span> v<span class="token punctuation">.</span>navigator_url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">main</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&quot;index&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打印的值改变了-但微信开发者工具的-appdata-的值没有改变" tabindex="-1"><a class="header-anchor" href="#打印的值改变了-但微信开发者工具的-appdata-的值没有改变" aria-hidden="true">#</a> 打印的值改变了，但微信开发者工具的 AppData 的值没有改变</h3>`,36),o={href:"https://blog.csdn.net/crxk_/article/details/107449261",target:"_blank",rel:"noopener noreferrer"},u=n(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
打印的值改变了，但微信开发者工具的 AppData 的值没有改变

已解决：

原因：AppData 值的改变是基于值发生修改时才会被调用。对数组的某一元素更新时，
可能工具并未识别到已更改，故没有调用 AppData 改变值方法。

解决：使用一个非数组变量实时改变值，就能调用 AppData 改变值方法，顺便修改了数组的值，
已实践验证。若变量赋值常量时，则只有第一次修改变量及数组

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h2><p>识别文本的换行符 用text标签，view标签无法识别</p>`,3);function h(v,m){const e=d("ExternalLinkIcon");return t(),i("div",null,[l,a("p",null,[a("a",o,[r("网址"),c(e)])]),u])}const b=s(p,[["render",h],["__file","微信小程序 笔记.html.vue"]]);export{b as default};
