import{_ as a,W as e,X as i,a2 as r}from"./framework-5d92cd28.js";const d="/assets/image-20220706222011627-1636bd0c.png",h="/assets/image-20220706222443394-89c311cd.png",n="/assets/image-20220706222056886-42f1f642.png",t="/assets/image-20220706222125366-ef5417de.png",s="/assets/image-20220706222153796-8f96180b.png",c="/assets/image-20220706222207847-7d62981c.png",p="/assets/image-20220706222228598-fb35b300.png",g="/assets/image-20220706222846503-511659d1.png",o={},f=r('<h3 id="时间复杂度计算" tabindex="-1"><a class="header-anchor" href="#时间复杂度计算" aria-hidden="true">#</a> 时间复杂度计算</h3><h4 id="数据规模概念" tabindex="-1"><a class="header-anchor" href="#数据规模概念" aria-hidden="true">#</a> 数据规模概念</h4><figure><img src="'+d+'" alt="image-20220706222011627" tabindex="0" loading="lazy"><figcaption>image-20220706222011627</figcaption></figure><h4 id="验算复杂度" tabindex="-1"><a class="header-anchor" href="#验算复杂度" aria-hidden="true">#</a> 验算复杂度</h4><p>对每次操作计时，然后逐步翻n倍（通常n = 10）来增加数据量，再分析每次计时之间的差距。</p><p>O(n) 计时间差距n倍，O(n^2)计时差距为4*n倍， O(logn)计时间差距极小</p><figure><img src="'+h+'" alt="image-20220706222443394" tabindex="0" loading="lazy"><figcaption>image-20220706222443394</figcaption></figure><h4 id="常见复杂度" tabindex="-1"><a class="header-anchor" href="#常见复杂度" aria-hidden="true">#</a> 常见复杂度</h4><figure><img src="'+n+'" alt="image-20220706222056886" tabindex="0" loading="lazy"><figcaption>image-20220706222056886</figcaption></figure><figure><img src="'+t+'" alt="image-20220706222125366" tabindex="0" loading="lazy"><figcaption>image-20220706222125366</figcaption></figure><figure><img src="'+s+'" alt="image-20220706222153796" tabindex="0" loading="lazy"><figcaption>image-20220706222153796</figcaption></figure><figure><img src="'+c+'" alt="image-20220706222207847" tabindex="0" loading="lazy"><figcaption>image-20220706222207847</figcaption></figure><figure><img src="'+p+'" alt="image-20220706222228598" tabindex="0" loading="lazy"><figcaption>image-20220706222228598</figcaption></figure><h4 id="递归复杂度" tabindex="-1"><a class="header-anchor" href="#递归复杂度" aria-hidden="true">#</a> 递归复杂度</h4><p>每次递归中时间度*递归深度</p><figure><img src="'+g+'" alt="image-20220706222846503" tabindex="0" loading="lazy"><figcaption>image-20220706222846503</figcaption></figure><h3 id="习题分类" tabindex="-1"><a class="header-anchor" href="#习题分类" aria-hidden="true">#</a> 习题分类</h3><h4 id="滑动窗口-6" tabindex="-1"><a class="header-anchor" href="#滑动窗口-6" aria-hidden="true">#</a> 滑动窗口（6）</h4><p>209 3 483 76 219 220</p><h4 id="查找相关-13" tabindex="-1"><a class="header-anchor" href="#查找相关-13" aria-hidden="true">#</a> 查找相关（13）</h4><p>242 202 290 205 451</p><p>1 15 18 16</p><p>454 49</p><p>447 149</p><h4 id="链表-12" tabindex="-1"><a class="header-anchor" href="#链表-12" aria-hidden="true">#</a> 链表（12）</h4><p>206 92 82 86 328 2 445</p><p>203 21 25 147</p><p>237</p><h4 id="树-7" tabindex="-1"><a class="header-anchor" href="#树-7" aria-hidden="true">#</a> 树（7）</h4><p>437</p><h5 id="二分搜索树" tabindex="-1"><a class="header-anchor" href="#二分搜索树" aria-hidden="true">#</a> 二分搜索树</h5><p>235 98 450 108 230 236</p><h4 id="双指针-链表-5" tabindex="-1"><a class="header-anchor" href="#双指针-链表-5" aria-hidden="true">#</a> 双指针&amp;链表（5）</h4><p>11 19 61 143 234</p><h4 id="栈和队列-4" tabindex="-1"><a class="header-anchor" href="#栈和队列-4" aria-hidden="true">#</a> 栈和队列（4）</h4><p>20 150 71 341</p><h4 id="树-队列-4" tabindex="-1"><a class="header-anchor" href="#树-队列-4" aria-hidden="true">#</a> 树&amp;队列（4）</h4><p>102 107 199</p><h4 id="图-队列-3" tabindex="-1"><a class="header-anchor" href="#图-队列-3" aria-hidden="true">#</a> 图&amp;队列（3）</h4><p>279 127 126</p><h4 id="优先队列-2" tabindex="-1"><a class="header-anchor" href="#优先队列-2" aria-hidden="true">#</a> 优先队列（2）</h4><p>347 23</p><h4 id="递归和回溯-19" tabindex="-1"><a class="header-anchor" href="#递归和回溯-19" aria-hidden="true">#</a> 递归和回溯（19）</h4><h5 id="树形问题" tabindex="-1"><a class="header-anchor" href="#树形问题" aria-hidden="true">#</a> 树形问题</h5><p>17 93 131 46 47</p><h5 id="组合问题" tabindex="-1"><a class="header-anchor" href="#组合问题" aria-hidden="true">#</a> 组合问题</h5><p>77 39 40 216 78 90 401</p><h5 id="二维平面问题" tabindex="-1"><a class="header-anchor" href="#二维平面问题" aria-hidden="true">#</a> 二维平面问题</h5><p>79 200 130 417 51 52 37</p><h4 id="动态规划" tabindex="-1"><a class="header-anchor" href="#动态规划" aria-hidden="true">#</a> 动态规划</h4><p>70 120 64 343 279 91 62</p><p>198 213 337 309</p><p>300 376</p><h4 id="背包问题" tabindex="-1"><a class="header-anchor" href="#背包问题" aria-hidden="true">#</a> 背包问题</h4><p>416 322 377 474 139 494</p><p>300 376</p><h4 id="贪心算法" tabindex="-1"><a class="header-anchor" href="#贪心算法" aria-hidden="true">#</a> 贪心算法</h4><p>455 392</p><p>435</p>',59),l=[f];function m(u,_){return e(),i("div",null,l)}const x=a(o,[["render",m],["__file","C__算法笔记.html.vue"]]);export{x as default};
