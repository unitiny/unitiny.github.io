import{_ as p,W as o,X as c,Y as n,Z as a,a0 as t,a2 as e,C as i}from"./framework-5d92cd28.js";const l={},r=n("h2",{id:"语法",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#语法","aria-hidden":"true"},"#"),a(" 语法：")],-1),u=n("h3",{id:"flex",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#flex","aria-hidden":"true"},"#"),a(" flex:")],-1),d={href:"https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"},k=e('<p>flex:1 使子元素均匀分布</p><p>justify-content: space-between; 元素放置两边</p><p>flex-shrink: 0; 取消被flex；</p><h3 id="float" tabindex="-1"><a class="header-anchor" href="#float" aria-hidden="true">#</a> float:</h3><p>clear:both; 清除浮动样式</p><h3 id="border-radius" tabindex="-1"><a class="header-anchor" href="#border-radius" aria-hidden="true">#</a> border-radius</h3><p>border-radius: 50%;</p><h3 id="字体" tabindex="-1"><a class="header-anchor" href="#字体" aria-hidden="true">#</a> 字体：</h3><p>font-style: italic; 字体倾斜</p><p>margin-right: auto; 设置右边距 margin 边缘</p><p>text-align:justify; 改变字与字之间的间距使得每行对齐：</p><p>word-wrap: break-word; 换行</p><p>Currentcolor 继承当前文字颜色，类似一个变量</p><p>text-indent: 15px 字体行首缩进</p><h3 id="padding-margin" tabindex="-1"><a class="header-anchor" href="#padding-margin" aria-hidden="true">#</a> padding margin：</h3><p>padding: 8px; 文本与背景上下左右间隔</p><p>margin-left是该元素与其他元素的间隔，而不是里面的子元素间隔，float同理</p><h3 id="z-index" tabindex="-1"><a class="header-anchor" href="#z-index" aria-hidden="true">#</a> z-index：</h3><p>z-index 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面。</p><p>z-index改变页面不改变 ，受上层css影响</p>',20),h={href:"https://blog.csdn.net/apple_01150525/article/details/76546367",target:"_blank",rel:"noopener noreferrer"},v=n("h3",{id:"position",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#position","aria-hidden":"true"},"#"),a(" position：")],-1),m={href:"https://www.runoob.com/w3cnote/css-position-static-relative-absolute-fixed.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.cnblogs.com/chinafine/articles/1765967.html",target:"_blank",rel:"noopener noreferrer"},g=e('<p>position:inline会影响margin:0 auto居中</p><h3 id="box" tabindex="-1"><a class="header-anchor" href="#box" aria-hidden="true">#</a> box:</h3><p>box-shadow: 0 6px 12px rgb(0 0 0 /18%); 阴影效果</p><h3 id="选择子元素" tabindex="-1"><a class="header-anchor" href="#选择子元素" aria-hidden="true">#</a> 选择子元素：</h3><p>:nth-child(n) 选择器匹配父元素中的第 n 个子元素，元素类型没有限制。</p><h3 id="background" tabindex="-1"><a class="header-anchor" href="#background" aria-hidden="true">#</a> background:</h3><p>Background-image:url()括号中路径反斜杠不是\\，要成/才能显示，改变背景图片大小用background-size</p><p>Background-color 填充的是整个页面的大小，background-size height width无法改变大小</p><p>background-size 放前放后都能改变Background-image的大小，但后面优先，会覆盖前面的。</p><p>background: linear-gradient(#E53E49,#D43636); 渐变</p><p>Opacity属性设置一个元素的透明度级别。</p><p>div background-size:cover 背景覆盖</p><h3 id="图片" tabindex="-1"><a class="header-anchor" href="#图片" aria-hidden="true">#</a> 图片：</h3><p>background-size:150%/50% 图片放大缩小 filter: blur(20px); 滤镜效果</p>',14),f={href:"https://blog.csdn.net/julystroy/article/details/96493615",target:"_blank",rel:"noopener noreferrer"},x=e(`<h3 id="icon图标" tabindex="-1"><a class="header-anchor" href="#icon图标" aria-hidden="true">#</a> icon图标：</h3><p>font-size 改变图标大小</p><h3 id="伪元素" tabindex="-1"><a class="header-anchor" href="#伪元素" aria-hidden="true">#</a> 伪元素：</h3><p>设置元素的首字母、首行的样式</p><p>在元素的内容之前或之后插入内容</p><p>::before 伪元素可用于在元素内容之前插入一些内容。</p><p>::selection 伪元素匹配用户选择的元素部分,对用户选中的文 字部分添加样式，</p><h3 id="对齐方法" tabindex="-1"><a class="header-anchor" href="#对齐方法" aria-hidden="true">#</a> 对齐方法：</h3><p>margin:0 auto; 让元素相对父元素居中</p><p>verticla-align 垂直居中</p><p>top:50%与margin-top：height/2 配合</p><p>margin-bottom: 5px; 行间距</p><p>元素自身居中</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>left: 50%;
top:50%;
transform: translate(-50%, -50%);  元素相对自身偏移
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对里面元素整体横着居中</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>//对ul标签设置，可让里面元素li标签水平对齐
<span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token property">flex-direction</span><span class="token punctuation">:</span> row<span class="token punctuation">;</span>
<span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>元素正中间</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),_={href:"https://blog.csdn.net/julystroy/article/details/96493615",target:"_blank",rel:"noopener noreferrer"},y=e(`<h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能：</h2><h3 id="处理标题" tabindex="-1"><a class="header-anchor" href="#处理标题" aria-hidden="true">#</a> 处理标题</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>  //只输出一行
<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>  //溢出用...表示
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  	//多出隐藏
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="元素摆放" tabindex="-1"><a class="header-anchor" href="#元素摆放" aria-hidden="true">#</a> 元素摆放</h3><p>让子div置于父div下方：</p><p>父级相对定位，子级绝对定位，再bottom=0</p><p>vertical-align 属性设置一个元素的垂直对齐方式。</p><h3 id="改变图片颜色-前提图片黑色背景白色" tabindex="-1"><a class="header-anchor" href="#改变图片颜色-前提图片黑色背景白色" aria-hidden="true">#</a> 改变图片颜色（前提图片黑色背景白色）：</h3><p>在background的url后加上,linear-gradient(#f00, #f00) no-repeat;</p><p>或者用opacity改透明度变灰</p><h3 id="图片缩放" tabindex="-1"><a class="header-anchor" href="#图片缩放" aria-hidden="true">#</a> 图片缩放</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
<span class="token property">padding-top</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>
<span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
<span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
<span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
<span class="token property">-moz-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="更改鼠标样式" tabindex="-1"><a class="header-anchor" href="#更改鼠标样式" aria-hidden="true">#</a> 更改鼠标样式</h3><p>cursor 规则是设定网页浏览时用户鼠标指针的样式，也就是鼠标的图形形状</p><p>cursor：pointer设定鼠标的形状为一只伸出食指的手</p><h3 id="内容溢出使用省略号" tabindex="-1"><a class="header-anchor" href="#内容溢出使用省略号" aria-hidden="true">#</a> 内容溢出使用省略号：</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>//以下为第二行多出的文本内容省略号代替
<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
<span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="弹窗功能" tabindex="-1"><a class="header-anchor" href="#弹窗功能" aria-hidden="true">#</a> 弹窗功能</h3>`,18),w={href:"https://v3.bootcss.com/javascript/#modals",target:"_blank",rel:"noopener noreferrer"},q=e(`<h3 id="制作泡泡效果" tabindex="-1"><a class="header-anchor" href="#制作泡泡效果" aria-hidden="true">#</a> 制作泡泡效果</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>X-UA-Compatible<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>IE=edge<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>style8.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Bubbles<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">function</span> <span class="token function">createBubble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// 指定一个或多个匹配元素的 CSS 选择器。 可以使用它们的 id, 类, 类型, 属性, 属性值等来选取元素。</span>
            <span class="token keyword">const</span> section <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;section&#39;</span><span class="token punctuation">)</span>
            
            <span class="token comment">// document.createElement()是在对象中创建一个对象，</span>
            <span class="token comment">// 要与appendChild() 或insertBefore()方法联合使用。</span>
            <span class="token comment">// 其中，appendChild()方法在节点的子节点列表末添加新的子节点。</span>
            <span class="token comment">// insertBefore() 方法在节点的子节点列表任意位置插入新的节点。</span>
            <span class="token keyword">const</span> createElement <span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">)</span>
            
            <span class="token keyword">var</span> size <span class="token operator">=</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>

            createElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">+</span> size <span class="token operator">+</span><span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
            createElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">+</span> size <span class="token operator">+</span><span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span>
            createElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>innerWidth <span class="token operator">+</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">;</span>
            section<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>createElement<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                createElement<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">4000</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
		
        <span class="token comment">// setInterval() 方法会不停地调用函数，直到 clearInterval() 被调用或窗口被关闭。</span>
        <span class="token comment">// 由 setInterval() 返回的 ID 值可用作 clearInterval() 方法的参数。</span>
        <span class="token function">setInterval</span><span class="token punctuation">(</span>createBubble<span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>
        
        
        <span class="token comment">// setInterval()会按给定时间间隔一直执行，而setTimeout()只会执行一次</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="球类动画" tabindex="-1"><a class="header-anchor" href="#球类动画" aria-hidden="true">#</a> 球类动画</h3>`,3),z={href:"https://www.w3cplus.com/css3/spheres.html",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"波浪动画",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#波浪动画","aria-hidden":"true"},"#"),a(" 波浪动画")],-1),j={href:"https://www.jianshu.com/p/53ba44457b1a?utm_source=desktop&utm_medium=timeline",target:"_blank",rel:"noopener noreferrer"},B=e('<h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点：</h2><p>css样式优先级高于标签属性</p><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h2><h3 id="hover不起作用" tabindex="-1"><a class="header-anchor" href="#hover不起作用" aria-hidden="true">#</a> hover不起作用</h3><p>1 要放置在visited之后，没有visited不用理</p><p>2 被z-index：-1的背景遮挡住，把-1改成大于等于零就行</p>',6),C={id:"修改js的display但没反应问题",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#修改js的display但没反应问题","aria-hidden":"true"},"#",-1),T={href:"https://blog.csdn.net/julystroy/article/details/96493615",target:"_blank",rel:"noopener noreferrer"},D=n("h3",{id:"margin-0-auto仍不居中",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#margin-0-auto仍不居中","aria-hidden":"true"},"#"),a(" margin:0 auto仍不居中")],-1),N=n("p",null,"margin:0 auto 是上下界边距零，左右自适应，因此要设置宽度才能自适应。同时position为absolute也不行，要relative",-1),S=n("h3",{id:"transition-transform对子元素的影响",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#transition-transform对子元素的影响","aria-hidden":"true"},"#"),a(" transition,transform对子元素的影响")],-1),V=n("p",null,"transition,transform会默认给div加上position：relative;从而导致子元素绝对定位出现问题",-1);function L(M,O){const s=i("ExternalLinkIcon");return o(),c("div",null,[r,u,n("p",null,[n("a",d,[a("flex 布局"),t(s)])]),k,n("p",null,[n("a",h,[a("z-index不起作用问题"),t(s)])]),v,n("p",null,[n("a",m,[a("position详解"),t(s)])]),n("p",null,[n("a",b,[a("了解 position:relative"),t(s)])]),g,n("p",null,[n("a",f,[a("背景图片铺满整个屏幕"),t(s)])]),x,n("p",null,[n("a",_,[a("各种居中"),t(s)])]),y,n("p",null,[n("a",w,[a("网址"),t(s)])]),q,n("p",null,[n("a",z,[a("https://www.w3cplus.com/css3/spheres.html"),t(s)])]),E,n("p",null,[n("a",j,[a("网址"),t(s)])]),B,n("h3",C,[I,a(),n("a",T,[a("修改js的display但没反应问题"),t(s)])]),D,N,S,V])}const W=p(l,[["render",L],["__file","Css.html.vue"]]);export{W as default};
