const n=JSON.parse('{"key":"v-07fb14b4","path":"/posts/%E5%90%8E%E7%AB%AF/Python/Python%E7%88%AC%E8%99%AB.html","title":"Python爬虫","lang":"en-US","frontmatter":{"icon":"article","date":"2022-01-10T00:00:00.000Z","title":"Python爬虫","category":["后端","Python"],"tag":["Python爬虫"],"description":"Python 爬虫 使用： 教程 语法： 正则表达式 # findall匹配所有的字符 lst = re.findall(rep, str1) print(lst) # finditer迭代器 lst1 = re.finditer(rep, str1) for i in lst1: print(i.group()) # compile预加载 obj = re.compile(r\\"\\\\d+\\")","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%90%8E%E7%AB%AF/Python/Python%E7%88%AC%E8%99%AB.html"}],["meta",{"property":"og:site_name","content":"unitiny的宇宙"}],["meta",{"property":"og:title","content":"Python爬虫"}],["meta",{"property":"og:description","content":"Python 爬虫 使用： 教程 语法： 正则表达式 # findall匹配所有的字符 lst = re.findall(rep, str1) print(lst) # finditer迭代器 lst1 = re.finditer(rep, str1) for i in lst1: print(i.group()) # compile预加载 obj = re.compile(r\\"\\\\d+\\")"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-25T09:20:57.000Z"}],["meta",{"property":"article:author","content":"unitiny"}],["meta",{"property":"article:tag","content":"Python爬虫"}],["meta",{"property":"article:published_time","content":"2022-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-25T09:20:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python爬虫\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-25T09:20:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"unitiny\\",\\"url\\":\\"#\\"}]}"]]},"headers":[{"level":2,"title":"使用：","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"语法：","slug":"语法","link":"#语法","children":[{"level":3,"title":"正则表达式","slug":"正则表达式","link":"#正则表达式","children":[]},{"level":3,"title":"三种爬虫方式：","slug":"三种爬虫方式","link":"#三种爬虫方式","children":[]},{"level":3,"title":"字符串处理：","slug":"字符串处理","link":"#字符串处理","children":[]},{"level":3,"title":"代理：","slug":"代理","link":"#代理","children":[]},{"level":3,"title":"多线程：","slug":"多线程","link":"#多线程","children":[]},{"level":3,"title":"协程：","slug":"协程","link":"#协程","children":[]},{"level":3,"title":"Selenium自动化：","slug":"selenium自动化","link":"#selenium自动化","children":[]}]},{"level":2,"title":"功能:","slug":"功能","link":"#功能","children":[{"level":3,"title":"获取页面源代码","slug":"获取页面源代码","link":"#获取页面源代码","children":[]},{"level":3,"title":"爬取豆瓣电影资料","slug":"爬取豆瓣电影资料","link":"#爬取豆瓣电影资料","children":[]},{"level":3,"title":"爬取电影天堂电影下载网址","slug":"爬取电影天堂电影下载网址","link":"#爬取电影天堂电影下载网址","children":[]},{"level":3,"title":"使用bs4爬取北京新发地的菜价","slug":"使用bs4爬取北京新发地的菜价","link":"#使用bs4爬取北京新发地的菜价","children":[]},{"level":3,"title":"爬取网易云评论（解析加密，难）：","slug":"爬取网易云评论-解析加密-难","link":"#爬取网易云评论-解析加密-难","children":[]}]},{"level":2,"title":"问题：","slug":"问题","link":"#问题","children":[{"level":3,"title":"导入re却使用不了findall","slug":"导入re却使用不了findall","link":"#导入re却使用不了findall","children":[]},{"level":3,"title":"遇到防盗链爬取不了：","slug":"遇到防盗链爬取不了","link":"#遇到防盗链爬取不了","children":[]},{"level":3,"title":"selenium点击事件不生效：","slug":"selenium点击事件不生效","link":"#selenium点击事件不生效","children":[]}]},{"level":2,"title":"注意：","slug":"注意","link":"#注意","children":[]}],"git":{"createdTime":1721899257000,"updatedTime":1721899257000,"contributors":[{"name":"unitiny","email":"2069234934@qq.com","commits":1}]},"readingTime":{"minutes":3,"words":901},"filePathRelative":"posts/后端/Python/Python爬虫.md","localizedDate":"January 10, 2022","excerpt":"<h1> Python 爬虫</h1>\\n<h2> 使用：</h2>\\n<p><a href=\\"https://www.bilibili.com/video/BV1wD4y1o7AS\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">教程</a></p>\\n<h2> 语法：</h2>\\n<h3> 正则表达式</h3>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token comment\\"># findall匹配所有的字符</span>\\nlst <span class=\\"token operator\\">=</span> re<span class=\\"token punctuation\\">.</span>findall<span class=\\"token punctuation\\">(</span>rep<span class=\\"token punctuation\\">,</span> str1<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>lst<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token comment\\"># finditer迭代器</span>\\nlst1 <span class=\\"token operator\\">=</span> re<span class=\\"token punctuation\\">.</span>finditer<span class=\\"token punctuation\\">(</span>rep<span class=\\"token punctuation\\">,</span> str1<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> lst1<span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">.</span>group<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    \\n<span class=\\"token comment\\"># compile预加载</span>\\nobj <span class=\\"token operator\\">=</span> re<span class=\\"token punctuation\\">.</span><span class=\\"token builtin\\">compile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">r\\"\\\\d+\\"</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
