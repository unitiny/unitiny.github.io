import{_ as i,W as o,X as p,Y as n,Z as a,a0 as e,a2 as t,C as r}from"./framework-5d92cd28.js";const l={},c=n("h1",{id:"python-爬虫",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-爬虫","aria-hidden":"true"},"#"),a(" Python 爬虫")],-1),d=n("h2",{id:"使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用","aria-hidden":"true"},"#"),a(" 使用：")],-1),u={href:"https://www.bilibili.com/video/BV1wD4y1o7AS",target:"_blank",rel:"noopener noreferrer"},h=t(`<h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法：</h2><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># findall匹配所有的字符</span>
lst <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>rep<span class="token punctuation">,</span> str1<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>

<span class="token comment"># finditer迭代器</span>
lst1 <span class="token operator">=</span> re<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>rep<span class="token punctuation">,</span> str1<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> lst1<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
<span class="token comment"># compile预加载</span>
obj <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;\\d+&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三种爬虫方式" tabindex="-1"><a class="header-anchor" href="#三种爬虫方式" aria-hidden="true">#</a> 三种爬虫方式：</h3><p>正则表达式，BeautifulSoup，Xpath</p><h3 id="字符串处理" tabindex="-1"><a class="header-anchor" href="#字符串处理" aria-hidden="true">#</a> 字符串处理：</h3><h4 id="字符串拼接" tabindex="-1"><a class="header-anchor" href="#字符串拼接" aria-hidden="true">#</a> 字符串拼接：</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>title <span class="token operator">=</span> div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;div/div/a[2]/div[2]/div[2]/p/text()&quot;</span><span class="token punctuation">)</span>
title <span class="token operator">=</span> <span class="token string">&quot;sass&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>div<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;div/div/a[2]/div[2]/div[2]/p/text()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#[&#39;软件开发定制&#39;, &#39;移动UI设计仓储物流软件数据抓取IT运维&#39;] </span>
<span class="token comment">#软件开发定制sass移动UI设计仓储物流软件数据抓取IT运维</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字符串从右边开始分割" tabindex="-1"><a class="header-anchor" href="#字符串从右边开始分割" aria-hidden="true">#</a> 字符串从右边开始分割：</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>src<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment">#注意是rsplit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="字符串筛选排除开头为-的" tabindex="-1"><a class="header-anchor" href="#字符串筛选排除开头为-的" aria-hidden="true">#</a> 字符串筛选排除开头为#的：</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>startswith<span class="token punctuation">(</span><span class="token punctuation">)</span> 
方法用于检查字符串是否是以指定子字符串开头，如果是则返回 <span class="token boolean">True</span>，否则返回 <span class="token boolean">False</span>。
如果参数 beg 和 end 指定值，则在指定范围内检查。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理" aria-hidden="true">#</a> 代理：</h3><p>担心同一ip地址多次访问会被禁止，因此通过多次借用不同的ip去访问即解决。这些不同的ip即为代理</p><h3 id="多线程" tabindex="-1"><a class="header-anchor" href="#多线程" aria-hidden="true">#</a> 多线程：</h3><p>程序本为单线程模式，多线程相当于开辟多个单线程同时执行</p><h3 id="协程" tabindex="-1"><a class="header-anchor" href="#协程" aria-hidden="true">#</a> 协程：</h3><p>程序遇到IO模式（输入输出）时CPU会暂缓工作，导致运行效率降低。为提高效率，当有线程遇到IO时，使用异步操作，可以让CPU本要罢工的时间里去执行下一个操作。等IO时间结束则回到原线程继续工作。即牢牢的压榨CPU的摸鱼时间</p><h3 id="selenium自动化" tabindex="-1"><a class="header-anchor" href="#selenium自动化" aria-hidden="true">#</a> Selenium自动化：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>可以处理登录\\验证码\\拖拽条\\点击事件\\切换窗口
缺点：运行慢
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能:</h2><h3 id="获取页面源代码" tabindex="-1"><a class="header-anchor" href="#获取页面源代码" aria-hidden="true">#</a> 获取页面源代码</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>filename <span class="token operator">=</span> <span class="token string">&#39;baidu.html&#39;</span>
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> urlopen
url <span class="token operator">=</span> <span class="token string">&quot;http://www.baidu.com&quot;</span>
res <span class="token operator">=</span> urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="爬取豆瓣电影资料" tabindex="-1"><a class="header-anchor" href="#爬取豆瓣电影资料" aria-hidden="true">#</a> 爬取豆瓣电影资料</h3>`,24),k={href:"https://movie.douban.com/top250",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>功能实现文件：D:\\Python\\python crawler\\getMovie.py</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>item<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;year&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">#group 获取迭代器中的内容 strip()去除空格</span>
dic <span class="token operator">=</span> item<span class="token punctuation">.</span>groupdict<span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment">#转化为字典</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="爬取电影天堂电影下载网址" tabindex="-1"><a class="header-anchor" href="#爬取电影天堂电影下载网址" aria-hidden="true">#</a> 爬取电影天堂电影下载网址</h3>`,3),v={href:"https://www.dy2018.com/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,"功能实现文件：D:\\Python\\python crawler\\getMovie2.py",-1),_=n("p",null,"难点：首页电影链接只有部分，需要拼接。需要三次re筛选才能获得完整地址",-1),f=n("h3",{id:"使用bs4爬取北京新发地的菜价",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用bs4爬取北京新发地的菜价","aria-hidden":"true"},"#"),a(" 使用bs4爬取北京新发地的菜价")],-1),g={href:"http://www.xinfadi.com.cn/index.html",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.bilibili.com/video/BV1i54y1h75W?p=30&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"功能实现文件：D:\\Python\\python crawler\\bsTest.py (没写完整)",-1),w=n("p",null,"特色：使用bs4能够快速的获取html元素,不需要正则的冗长",-1),q=n("h3",{id:"爬取网易云评论-解析加密-难",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#爬取网易云评论-解析加密-难","aria-hidden":"true"},"#"),a(" 爬取网易云评论（解析加密，难）：")],-1),P={href:"https://www.bilibili.com/video/BV1i54y1h75W?p=46",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,"难点：有自己的加密密钥，要解析并配置个生成静态的密钥。因此要去解读js的加密过程",-1),B=n("p",null,"功能实现文件：D:\\Python\\python crawler\\WangYiComment.py",-1),C=n("h2",{id:"问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#问题","aria-hidden":"true"},"#"),a(" 问题：")],-1),E=n("h3",{id:"导入re却使用不了findall",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#导入re却使用不了findall","aria-hidden":"true"},"#"),a(" 导入re却使用不了findall")],-1),V=n("p",null,"报错：",-1),D=n("p",null,"AttributeError: partially initialized module 're' has no attribute 'findall' (most likely due to a circular import)",-1),M=n("p",null,"原因和解决：",-1),T={href:"http://xn--re-tz2crf33a50u6eqjc9485boe1d.py",target:"_blank",rel:"noopener noreferrer"},U=t('<h3 id="遇到防盗链爬取不了" tabindex="-1"><a class="header-anchor" href="#遇到防盗链爬取不了" aria-hidden="true">#</a> 遇到防盗链爬取不了：</h3><p>处理下user-agent以及refer（溯源网址，即上一层页面必须为refer指定的页面允许数据）</p><h3 id="selenium点击事件不生效" tabindex="-1"><a class="header-anchor" href="#selenium点击事件不生效" aria-hidden="true">#</a> selenium点击事件不生效：</h3><p>报错：selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <h3 style="max-width:180px;">...</h3> is not clickable at point (83, 654).</p><p>原因：应该是元素定位相互覆盖。</p>',5),j={href:"https://www.cnblogs.com/PMXGG/p/13321280.html",target:"_blank",rel:"noopener noreferrer"},G=n("h2",{id:"注意",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#注意","aria-hidden":"true"},"#"),a(" 注意：")],-1),N=n("p",null,"要登录才有信息获取的可以使用requerst的session()，得到cookie用于request登录",-1);function S(W,X){const s=r("ExternalLinkIcon");return o(),p("div",null,[c,d,n("p",null,[n("a",u,[a("教程"),e(s)])]),h,n("p",null,[n("a",k,[a("豆瓣网址"),e(s)])]),m,n("p",null,[n("a",v,[a("电影天堂"),e(s)])]),b,_,f,n("p",null,[n("a",g,[a("新发地"),e(s)])]),n("p",null,[n("a",y,[a("教程链接"),e(s)])]),x,w,q,n("p",null,[n("a",P,[a("教程"),e(s)])]),I,B,C,E,V,D,M,n("p",null,[n("a",T,[a("可能文件名也取名为re.py"),e(s)]),a(",所以导入的import re中确实没有findall这个属性")]),U,n("p",null,[a("解决："),n("a",j,[a("https://www.cnblogs.com/PMXGG/p/13321280.html"),e(s)])]),G,N])}const z=i(l,[["render",S],["__file","Python爬虫.html.vue"]]);export{z as default};
