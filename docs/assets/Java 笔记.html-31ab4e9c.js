import{_ as n,W as t,X as r,Y as a,Z as e,a0 as d,a2 as s,C as c}from"./framework-5d92cd28.js";const g="/assets/image-20220901085841078-018d3be7.png",l="/assets/image-20220901091734466-6bc4863f.png",o="/assets/image-20220901092212947-f21ce47c.png",h="/assets/image-20220902171944956-9842a5a5.png",m="/assets/image-20220903160650149-88b0eb5a.png",u="/assets/image-20220903161043660-1cab60f9.png",f="/assets/image-20220903161526629-b3917702.png",p="/assets/image-20220903162341607-e8f7e522.png",b="/assets/image-20220903205135319-25fd0c6b.png",v="/assets/image-20220903205835862-c62febfb.png",x="/assets/image-20220903211853773-9de8f1a2.png",_="/assets/image-20220903165400393-74444e8b.png",y="/assets/image-20220903165552994-ba66f20f.png",z="/assets/image-20220903170124160-a4fea22d.png",w="/assets/image-20220903203942292-ca6dc8a0.png",j="/assets/image-20220904084649192-b941eb63.png",B="/assets/image-20220904084919215-996c631b.png",k="/assets/image-20220903204107027-1cb3c36c.png",V={},N=a("h2",{id:"学习",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#学习","aria-hidden":"true"},"#"),e(" 学习")],-1),E={href:"https://www.bilibili.com/video/BV12J41137hu?p=16&vd_source=3ec975651088fba288a277c53f0bcc77",target:"_blank",rel:"noopener noreferrer"},I=s('<figure><img src="'+g+`" alt="image-20220901085841078" tabindex="0" loading="lazy"><figcaption>image-20220901085841078</figcaption></figure><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行" aria-hidden="true">#</a> 运行</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>javac Hello.java
java Hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h3><figure><img src="`+l+'" alt="image-20220901091734466" tabindex="0" loading="lazy"><figcaption>image-20220901091734466</figcaption></figure><p>浮点数不精确，大约数，接近的两数可能不相等，应避免使用float比较</p><figure><img src="'+o+'" alt="image-20220901092212947" tabindex="0" loading="lazy"><figcaption>image-20220901092212947</figcaption></figure><p>类型从低到高，需要强制转换，可能会内存溢出或精度缺失</p><p>类型从高到低，会自动转换</p><figure><img src="'+h+`" alt="image-20220902171944956" tabindex="0" loading="lazy"><figcaption>image-20220902171944956</figcaption></figure><h3 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>final int PI = 3.14;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="包" tabindex="-1"><a class="header-anchor" href="#包" aria-hidden="true">#</a> 包</h3><figure><img src="`+m+'" alt="image-20220903160650149" tabindex="0" loading="lazy"><figcaption>image-20220903160650149</figcaption></figure><h3 id="生成规范文档" tabindex="-1"><a class="header-anchor" href="#生成规范文档" aria-hidden="true">#</a> 生成规范文档</h3><figure><img src="'+u+'" alt="image-20220903161043660" tabindex="0" loading="lazy"><figcaption>image-20220903161043660</figcaption></figure><h3 id="输入" tabindex="-1"><a class="header-anchor" href="#输入" aria-hidden="true">#</a> 输入</h3><figure><img src="'+f+'" alt="image-20220903161526629" tabindex="0" loading="lazy"><figcaption>image-20220903161526629</figcaption></figure><figure><img src="'+p+`" alt="image-20220903162341607" tabindex="0" loading="lazy"><figcaption>image-20220903162341607</figcaption></figure><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> switch</h3><p>和js一样</p><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><h4 id="构造器" tabindex="-1"><a class="header-anchor" href="#构造器" aria-hidden="true">#</a> 构造器</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>与类名相同且没有返回值
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+b+'" alt="image-20220903205135319" tabindex="0" loading="lazy"><figcaption>image-20220903205135319</figcaption></figure><h4 id="get-set" tabindex="-1"><a class="header-anchor" href="#get-set" aria-hidden="true">#</a> get/set</h4><figure><img src="'+v+`" alt="image-20220903205835862" tabindex="0" loading="lazy"><figcaption>image-20220903205835862</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>

protected 受保护的数据
this.func() 当前类的方法
super.func() 父类的方法
A instanceof B 判断A和B是否有继承关系
接口可以继承
abstract 抽象类
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="抽象类" tabindex="-1"><a class="header-anchor" href="#抽象类" aria-hidden="true">#</a> 抽象类</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>抽象类是它的所有子类的公共属性的集合，主要用来进行类型隐藏
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="接口" tabindex="-1"><a class="header-anchor" href="#接口" aria-hidden="true">#</a> 接口</h3><figure><img src="`+x+`" alt="image-20220903211853773" tabindex="0" loading="lazy"><figcaption>image-20220903211853773</figcaption></figure><h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><h3 id="运行-1" tabindex="-1"><a class="header-anchor" href="#运行-1" aria-hidden="true">#</a> 运行</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>javac 会编译成类，java 运行类，如果类有包名，如parent.children.eat,则需要cd回到parent的上级目录，
然后java parent.children.eat才能运行该eat类
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法类型" tabindex="-1"><a class="header-anchor" href="#方法类型" aria-hidden="true">#</a> 方法类型</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>静态方法不需要实例化对象，即可通过类名调用
非静态方法需要实例化的对象才能使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法重载" tabindex="-1"><a class="header-anchor" href="#方法重载" aria-hidden="true">#</a> 方法重载</h3><figure><img src="`+_+'" alt="image-20220903165400393" tabindex="0" loading="lazy"><figcaption>image-20220903165400393</figcaption></figure><figure><img src="'+y+'" alt="image-20220903165552994" tabindex="0" loading="lazy"><figcaption>image-20220903165552994</figcaption></figure><h3 id="可变参数" tabindex="-1"><a class="header-anchor" href="#可变参数" aria-hidden="true">#</a> 可变参数</h3><p>必须为最后的参数，不允许多个可变参数，即使类型不同</p><figure><img src="'+z+'" alt="image-20220903170124160" tabindex="0" loading="lazy"><figcaption>image-20220903170124160</figcaption></figure><h3 id="稀疏数组" tabindex="-1"><a class="header-anchor" href="#稀疏数组" aria-hidden="true">#</a> 稀疏数组</h3><p>只记录有效值，减少内存使用</p><figure><img src="'+w+'" alt="image-20220903203942292" tabindex="0" loading="lazy"><figcaption>image-20220903203942292</figcaption></figure><h3 id="异常机制" tabindex="-1"><a class="header-anchor" href="#异常机制" aria-hidden="true">#</a> 异常机制</h3><figure><img src="'+j+'" alt="image-20220904084649192" tabindex="0" loading="lazy"><figcaption>image-20220904084649192</figcaption></figure><h4 id="抛出异常" tabindex="-1"><a class="header-anchor" href="#抛出异常" aria-hidden="true">#</a> 抛出异常</h4><figure><img src="'+B+'" alt="image-20220904084919215" tabindex="0" loading="lazy"><figcaption>image-20220904084919215</figcaption></figure><h3 id="面向过程与面向对象" tabindex="-1"><a class="header-anchor" href="#面向过程与面向对象" aria-hidden="true">#</a> 面向过程与面向对象</h3><figure><img src="'+k+`" alt="image-20220903204107027" tabindex="0" loading="lazy"><figcaption>image-20220903204107027</figcaption></figure><h3 id="throws" tabindex="-1"><a class="header-anchor" href="#throws" aria-hidden="true">#</a> throws</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>抛出异常
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2>`,56);function J(A,C){const i=c("ExternalLinkIcon");return t(),r("div",null,[N,a("p",null,[a("a",E,[e("网址"),d(i)])]),I])}const L=n(V,[["render",J],["__file","Java 笔记.html.vue"]]);export{L as default};
