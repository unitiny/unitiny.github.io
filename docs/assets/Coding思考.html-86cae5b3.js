const e=JSON.parse('{"key":"v-642a0734","path":"/posts/%E6%87%82%E7%8E%8B/Coding%E6%80%9D%E8%80%83.html","title":"Coding思考","lang":"en-US","frontmatter":{"icon":"article","date":"2022-01-10T00:00:00.000Z","title":"Coding思考","category":["懂王"],"tag":["Coding思考"],"description":"面向对象编程 每个对象（类）有自身的属性和方法。 方法即对象的动作，只围绕自身属性进行，有很强的封闭性，因此结构清晰。 什么时候该写对象的方法呢，例如对自身属性的计算，可以写进方法。外部通过调用方法得到计算后的属性。 计算机局部原理 计算机访问某个地址时，通常邻近的地址在未来大概率访问到。故计算机会预读，多读入该区域内容。 多级缓存 若有一级缓存，二级缓存，一级缓存处理速度快，二级缓存容量大，双方要数据一致性。 先将一级缓存数据更新，且标志为脏，表示两者缓存数据不一致了。 等到下次更新，发现该数据为脏，则将数据写入二级缓存，更新一级缓存，并标志为脏。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E6%87%82%E7%8E%8B/Coding%E6%80%9D%E8%80%83.html"}],["meta",{"property":"og:site_name","content":"unitiny的宇宙"}],["meta",{"property":"og:title","content":"Coding思考"}],["meta",{"property":"og:description","content":"面向对象编程 每个对象（类）有自身的属性和方法。 方法即对象的动作，只围绕自身属性进行，有很强的封闭性，因此结构清晰。 什么时候该写对象的方法呢，例如对自身属性的计算，可以写进方法。外部通过调用方法得到计算后的属性。 计算机局部原理 计算机访问某个地址时，通常邻近的地址在未来大概率访问到。故计算机会预读，多读入该区域内容。 多级缓存 若有一级缓存，二级缓存，一级缓存处理速度快，二级缓存容量大，双方要数据一致性。 先将一级缓存数据更新，且标志为脏，表示两者缓存数据不一致了。 等到下次更新，发现该数据为脏，则将数据写入二级缓存，更新一级缓存，并标志为脏。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-25T09:20:57.000Z"}],["meta",{"property":"article:author","content":"unitiny"}],["meta",{"property":"article:tag","content":"Coding思考"}],["meta",{"property":"article:published_time","content":"2022-01-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-25T09:20:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Coding思考\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-25T09:20:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"unitiny\\",\\"url\\":\\"#\\"}]}"]]},"headers":[{"level":3,"title":"面向对象编程","slug":"面向对象编程","link":"#面向对象编程","children":[]},{"level":3,"title":"计算机局部原理","slug":"计算机局部原理","link":"#计算机局部原理","children":[]},{"level":3,"title":"多级缓存","slug":"多级缓存","link":"#多级缓存","children":[]},{"level":3,"title":"加索引项","slug":"加索引项","link":"#加索引项","children":[]},{"level":3,"title":"后台分批处理","slug":"后台分批处理","link":"#后台分批处理","children":[]},{"level":3,"title":"分片分组处理","slug":"分片分组处理","link":"#分片分组处理","children":[]},{"level":3,"title":"延迟初始化","slug":"延迟初始化","link":"#延迟初始化","children":[]},{"level":3,"title":"空间扩容","slug":"空间扩容","link":"#空间扩容","children":[]}],"git":{"createdTime":1721899257000,"updatedTime":1721899257000,"contributors":[{"name":"unitiny","email":"2069234934@qq.com","commits":1}]},"readingTime":{"minutes":2.54,"words":762},"filePathRelative":"posts/懂王/Coding思考.md","localizedDate":"January 10, 2022","excerpt":"<h3> 面向对象编程</h3>\\n<p>每个对象（类）有自身的属性和方法。</p>\\n<p>方法即对象的动作，只围绕自身属性进行，有很强的封闭性，因此结构清晰。</p>\\n<p>什么时候该写对象的方法呢，例如对自身属性的计算，可以写进方法。外部通过调用方法得到计算后的属性。</p>\\n<h3> 计算机局部原理</h3>\\n<p>计算机访问某个地址时，通常邻近的地址在未来大概率访问到。故计算机会预读，多读入该区域内容。</p>\\n<h3> 多级缓存</h3>\\n<p>若有一级缓存，二级缓存，一级缓存处理速度快，二级缓存容量大，双方要数据一致性。</p>\\n<ul>\\n<li>先将一级缓存数据更新，且标志为脏，表示两者缓存数据不一致了。</li>\\n<li>等到下次更新，发现该数据为脏，则将数据写入二级缓存，更新一级缓存，并标志为脏。</li>\\n</ul>","autoDesc":true}');export{e as data};
