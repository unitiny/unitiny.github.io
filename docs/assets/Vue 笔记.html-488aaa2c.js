import{_ as r,W as d,X as l,Y as e,Z as a,a0 as t,a3 as o,a4 as h,a2 as s,C as c}from"./framework-5d92cd28.js";const p={},u=e("h1",{id:"vue-笔记",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue-笔记","aria-hidden":"true"},"#"),a(" Vue 笔记")],-1),v=e("h2",{id:"上手",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#上手","aria-hidden":"true"},"#"),a(" 上手：")],-1),m={id:"安装vue-配置",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#安装vue-配置","aria-hidden":"true"},"#",-1),_={href:"https://www.cnblogs.com/zhaomeizi/p/8483597.html",target:"_blank",rel:"noopener noreferrer"},f={id:"安装devtool",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#安装devtool","aria-hidden":"true"},"#",-1),x={href:"https://blog.csdn.net/weixin_38654336/article/details/80790698",target:"_blank",rel:"noopener noreferrer"},k=s(`<h3 id="vue创建项目流程" tabindex="-1"><a class="header-anchor" href="#vue创建项目流程" aria-hidden="true">#</a> vue创建项目流程</h3><p>创建项目 必须 cd 到对应项目里面</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>vue init webpack vue-demo01 / vue create vue-name  可以自定义名称
cd  vue-demo01 
cnpm install  /  npm install   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果创建项目的时候没有报错，这一步可以省略。</p><p>如果报错了 cd到项目里面运行</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>cnpm install  /  npm install 
npm run dev/npm run start/npm run serve  启动项目
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="好用的工具" tabindex="-1"><a class="header-anchor" href="#好用的工具" aria-hidden="true">#</a> 好用的工具</h3><h3 id="bootstrap" tabindex="-1"><a class="header-anchor" href="#bootstrap" aria-hidden="true">#</a> bootstrap</h3><p>css排版布局及ui，移动设备优先</p><h3 id="vant" tabindex="-1"><a class="header-anchor" href="#vant" aria-hidden="true">#</a> vant</h3><p>ui设计与bootstrap类似</p><h3 id="less" tabindex="-1"><a class="header-anchor" href="#less" aria-hidden="true">#</a> less</h3><p>css预编译处理</p><h3 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h3><p>使用nodemon index.js 代替 node index.js 启动js终端 ，界面更优化</p><h3 id="axios" tabindex="-1"><a class="header-anchor" href="#axios" aria-hidden="true">#</a> axios</h3><p>Ajax是MVC模式，且要引入整个jQuery,项目太大</p><p>axios是MVVM(modex---view---view-model模式)，轻量且提供多个请求接口</p><h3 id="shortid" tabindex="-1"><a class="header-anchor" href="#shortid" aria-hidden="true">#</a> Shortid</h3><p>随机生成短id号</p><p>扩展安装 vue2全家桶17课 项目(总文件夹)终端打开</p><p>输入 npm i shortid --save 即可安装</p><h3 id="moment" tabindex="-1"><a class="header-anchor" href="#moment" aria-hidden="true">#</a> moment</h3><p>介绍：处理时间戳，转化为正常时间</p><p>安装：npm install moment --save</p><p>使用：moment(value).format(format1) 使value按format1的格式输出，format1为自定义，如：YYYY-MM-DD HH-MM-SS (此错误，月日与分秒字符相同，无法针对分秒或月日做出改变)</p><p>应为YYYY-MM-DD HH-mm-ss 一个时间格式</p><h3 id="animate-css" tabindex="-1"><a class="header-anchor" href="#animate-css" aria-hidden="true">#</a> animate.css</h3><p>好看的动画效果</p><p>nmp install animate.css --save</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法：</h2><h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h3><ul><li>:和@</li></ul><p>冒号：代表v-bind 绑定,单向绑定</p><p>@代表 v-on 监听</p><p>v-once 只使用一次传入数据 之后静态不会改变</p><p>​ v-model ：数据双向绑定</p><ul><li>V-for</li></ul><p>V-for 中的:key绑定key 是为了使该div是唯一标签，不会使用另一同名div</p><ul><li>v-html</li></ul>`,40),w=e("span",null,"hello",-1),q=s('<ul><li>computed和watch</li></ul><p>computed 得到多个数据变化计算一个结果，watch 得到一个数据变化去影响多个结果</p><p>computed 属性有get() 得到数据， set() 得到结果并计算影响数据，数据双向绑定</p><p>watch监听的变量可看成一个方法，数据单向绑定</p><ul><li><p>this.$root 访问最顶层的父级组件</p></li><li><p>数组操作</p><p>插入数组</p><p>this.persons.unshift(this.newPerson)</p><p>删除某一项数组 splice(index,len,[item]) 下标，删除长度(若为2，删除两个数组，item 替换内容)</p><p>如：this.persons.splice(index,1)</p></li></ul><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h3><ul><li><p>JSON.stringfy(obj)</p><p>将数据字符串化，如obj:3,则转化后’obj’： ‘3’ ，JSON.prase(obj) 将数据转换成对象</p><p>常用于localStroge与前后端的数据交互，获取localStroge要JSON.prase(obj)解析，存放到localStroge时要JSON.stringfy(obj)格式化</p></li><li><p>JSON.Stringify(value)</p><p>把对象的每一字段转变为字符串</p></li><li><p>JSON.prase(value)</p><p>解析对象</p></li></ul><h3 id="localstroge" tabindex="-1"><a class="header-anchor" href="#localstroge" aria-hidden="true">#</a> localStroge</h3><p>localStroge.clear();清除本地缓冲</p><h3 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期" aria-hidden="true">#</a> 生命周期</h3><p>图解</p><p>![](file:///C:\\Users\\20692\\AppData\\Local\\Temp\\ksohtml18056\\wps2.jpg)</p><h3 id="解析" tabindex="-1"><a class="header-anchor" href="#解析" aria-hidden="true">#</a> 解析 ...</h3><p>let arr=[...persons]; 使arr接受persons的全部数据；arr=person也行</p><h3 id="时间" tabindex="-1"><a class="header-anchor" href="#时间" aria-hidden="true">#</a> 时间</h3><p>new Date() 产生一个新的时间</p><h3 id="异步" tabindex="-1"><a class="header-anchor" href="#异步" aria-hidden="true">#</a> 异步</h3><p>async异步的意思 异步函数也就意味着该函数的执行不会阻塞后面代码的执行，且会效果置于后面展示。</p>',18),j={href:"https://www.cnblogs.com/zhoujuan/p/11692818.html",target:"_blank",rel:"noopener noreferrer"},S=s('<h3 id="router" tabindex="-1"><a class="header-anchor" href="#router" aria-hidden="true">#</a> Router</h3><p>跳转页面：this.$router.push(&#39;about&#39;)</p><h3 id="单向数据流" tabindex="-1"><a class="header-anchor" href="#单向数据流" aria-hidden="true">#</a> 单向数据流</h3><p>由数据源（data）控制视图（thml部分），而视图有特定的动作（methods）触发，于是动作actions又改变数据源，数据源接着改变视图，形成一个循环</p><h3 id="插槽" tabindex="-1"><a class="header-anchor" href="#插槽" aria-hidden="true">#</a> 插槽</h3>',5),y={href:"http://caibaojian.com/vue-slot.html",target:"_blank",rel:"noopener noreferrer"},V=e("p",null,"uniapp 使用插槽",-1),M={href:"https://blog.csdn.net/qq_31277409/article/details/108855534",target:"_blank",rel:"noopener noreferrer"},N={href:"https://blog.csdn.net/lianwenxiu/article/details/87898688",target:"_blank",rel:"noopener noreferrer"},O={href:"https://www.cnblogs.com/xiaohuasan/p/12423753.html",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.cnblogs.com/wangxiaoling/p/10250903.html",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://www.cnblogs.com/makai/p/11117073.html",target:"_blank",rel:"noopener noreferrer"},D=s(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>目前仅支持解构插槽 ，如 v-slot=&quot;{ user }&quot;，此为子向父传参，使用的是子组件的数据
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>子组件默认方法：created()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="懒加载" tabindex="-1"><a class="header-anchor" href="#懒加载" aria-hidden="true">#</a> 懒加载</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>例如 不下拉到图片位置时不加载图片，以达到性能优化效果
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能：</h2><h3 id="模板快捷键" tabindex="-1"><a class="header-anchor" href="#模板快捷键" aria-hidden="true">#</a> 模板快捷键</h3><p>输入vue</p><h3 id="关闭eslint强制语法规则" tabindex="-1"><a class="header-anchor" href="#关闭eslint强制语法规则" aria-hidden="true">#</a> 关闭ESLint强制语法规则</h3>`,8),J={href:"https://www.cnblogs.com/fxwoniu/p/13851303.html",target:"_blank",rel:"noopener noreferrer"},T={href:"https://blog.csdn.net/festone000/article/details/99672307",target:"_blank",rel:"noopener noreferrer"},E={href:"https://blog.csdn.net/qq_36888550/article/details/79815195",target:"_blank",rel:"noopener noreferrer"},L=s(`<h3 id="自定义全局或局部指令" tabindex="-1"><a class="header-anchor" href="#自定义全局或局部指令" aria-hidden="true">#</a> 自定义全局或局部指令：</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>directive:{id(指令名),(el,binding)=&gt;{
 el.textContent=binding.value.toUpperCase()}  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>id为指令名，el为html标签，binding为绑定的标签的内容。全局在main.js里定义，局部在部件vue中定义</p><h3 id="动画效果" tabindex="-1"><a class="header-anchor" href="#动画效果" aria-hidden="true">#</a> 动画效果</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.fade-enter, .fade-leave-to</span><span class="token punctuation">{</span>
<span class="token property">opacity</span><span class="token punctuation">:</span>0<span class="token punctuation">;</span>  //刚进入和完全离开时透明度为零
<span class="token property">transform</span><span class="token punctuation">:</span><span class="token function">traslateX</span><span class="token punctuation">(</span>200px<span class="token punctuation">)</span> //移动200px
<span class="token punctuation">}</span>
<span class="token selector">.fade-enter-active, .fade-leave-active</span><span class="token punctuation">{</span>
<span class="token property">trasition</span><span class="token punctuation">:</span>all 2s ease<span class="token punctuation">;</span>  //动画部分 时间 效果
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="正确打包配置" tabindex="-1"><a class="header-anchor" href="#正确打包配置" aria-hidden="true">#</a> 正确打包配置</h3>`,6),H={href:"https://blog.csdn.net/josiecici/article/details/107950429",target:"_blank",rel:"noopener noreferrer"},z={href:"https://www.cnblogs.com/facefront/p/10954799.html",target:"_blank",rel:"noopener noreferrer"},$=e("h3",{id:"vue设置代理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vue设置代理","aria-hidden":"true"},"#"),a(" vue设置代理")],-1),A={href:"https://www.jianshu.com/p/5ef2b17f9b25",target:"_blank",rel:"noopener noreferrer"},B=e("h3",{id:"打包后devserver代理失效",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#打包后devserver代理失效","aria-hidden":"true"},"#"),a(" 打包后devServer代理失效")],-1),I={href:"https://segmentfault.com/q/1010000020548094?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"},P=e("h3",{id:"axios改写为vue的原型属性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#axios改写为vue的原型属性","aria-hidden":"true"},"#"),a(" axios改写为Vue的原型属性")],-1),U={href:"https://www.jianshu.com/p/5924458133b4",target:"_blank",rel:"noopener noreferrer"},X=s(`<h3 id="click点击区分父和子元素事件" tabindex="-1"><a class="header-anchor" href="#click点击区分父和子元素事件" aria-hidden="true">#</a> click点击区分父和子元素事件</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>即阻止事件冒泡
子元素中@click.stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css中使用变量" tabindex="-1"><a class="header-anchor" href="#css中使用变量" aria-hidden="true">#</a> css中使用变量</h3>`,3),G={href:"https://blog.csdn.net/qq_41635167/article/details/103899769",target:"_blank",rel:"noopener noreferrer"},Q=s('<h2 id="冤家bug" tabindex="-1"><a class="header-anchor" href="#冤家bug" aria-hidden="true">#</a> 冤家bug:</h2><h3 id="animate-动画效果无法显示问题" tabindex="-1"><a class="header-anchor" href="#animate-动画效果无法显示问题" aria-hidden="true">#</a> animate 动画效果无法显示问题</h3><p>不能在transition里面添加div,div里面的标签可能会没反应，具体原因未知</p><h3 id="已存在相同文件名" tabindex="-1"><a class="header-anchor" href="#已存在相同文件名" aria-hidden="true">#</a> 已存在相同文件名</h3><p>把文件夹，vscode，命令窗口都关闭再重开一下</p><h3 id="soket-io连接问题" tabindex="-1"><a class="header-anchor" href="#soket-io连接问题" aria-hidden="true">#</a> soket.io连接问题</h3>',6),R=e("p",null,"使用socket.io准备",-1),W=e("p",null,"服务端(后端)：",-1),Z={href:"http://socket.io",target:"_blank",rel:"noopener noreferrer"},F=e("p",null,"客户端(前端)：",-1),K=e("p",null,"要npm install --save socket.io-client,然后在html文件中引入",-1),ee=e("li",null,[e("p",null,"报错"),e("p",null,"两端无法响应，并有status code 404警告，即客户端的client文件没有找到，无法引用。")],-1),ae=e("p",null,"解决",-1),ne={href:"http://xn--socket-hp8i85pj3ofxlkqusvjwv5cmn9coz2a.io",target:"_blank",rel:"noopener noreferrer"},te=s(`<h3 id="socket-io无法跨域请求" tabindex="-1"><a class="header-anchor" href="#socket-io无法跨域请求" aria-hidden="true">#</a> socket.io无法跨域请求</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>socketio.io = require(&#39;socket.io&#39;)(server, {

    allowEIO3: true,

    cors: {

    origin:[&quot;http://localhost:8080&quot;,&quot;http://127.0.0.1:8080&quot;], // 添加请求头即可

    methods: [&quot;GET&quot;, &quot;POST&quot;],

	credentials: true}});
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行服务器时mysql不使用一段时间会断开-且报错" tabindex="-1"><a class="header-anchor" href="#运行服务器时mysql不使用一段时间会断开-且报错" aria-hidden="true">#</a> 运行服务器时Mysql不使用一段时间会断开，且报错</h3><p>![img](file:///C:\\Users\\20692\\AppData\\Local\\Temp\\ksohtml18056\\wps1.jpg)</p><p>所以要写个自动重连的回调（递归）函数</p><h3 id="property-or-method-item-is-not-defined-on-the-instance-but-referenced-during-render" tabindex="-1"><a class="header-anchor" href="#property-or-method-item-is-not-defined-on-the-instance-but-referenced-during-render" aria-hidden="true">#</a> Property or method &quot;item&quot; is not defined on the instance but referenced during render.</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>item未定义却使用了，解决：data中定义item，哪怕为空
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点:</h2><p>v-once 只渲染一次，之后插槽内容不会更新</p><p>v-html 解析字符串成html</p><p>默认事件e，传入形式为$event</p><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意:</h2><ul><li>主件要名称大写</li><li>箭头函数有花括号要写return</li><li>computed中get方法每条语句后要加；而不是， 逗号会引起语法错误</li><li>style里边要用分号隔开，逗号无效</li><li>fade-enter-active,fade-leave-active{} 两个效果要加逗号，否则不生效</li><li>This.element.filter 搜索符合的内容 .push 添加内容 .splice 删除内容</li><li>vue中style的scoped会使组件私有化，从而使用ui渲染组件后，添加进来的、未在源html出现的div会因scoped的限制无法得到css的样式修改，因此要慎用scoped</li><li>引入函数要加{} 如：import { targetCate,addCate } from &#39;@/utils/request.js&#39;</li><li>axios中参数data是用于post请求的，参数params是用于get请求的</li></ul>`,13);function se(i,ie){const n=c("ExternalLinkIcon");return d(),l("div",null,[u,v,e("h3",m,[b,a(),e("a",_,[a("安装vue 配置"),t(n)])]),e("h3",f,[g,a(),e("a",x,[a("安装devtool"),t(n)])]),k,e("p",null,[a("v-html 可在vue中插入HTML标签，如变量a:"),w,a(",html中"+o(i.a)+",则只把span当成字符串，加入v-html会自动识别",1)]),q,e("p",null,[e("a",j,[a("async与await详解"),t(n)])]),S,e("p",null,[a("将子组件在父组件的"),h(i.$slots,"default"),a("标签位置显示")]),e("p",null,[e("a",y,[a("插槽详解"),t(n)])]),V,e("p",null,[e("a",M,[a("父向子传参"),t(n)])]),e("p",null,[e("a",N,[a("子向父传值或直接修改父的值1"),t(n)])]),e("p",null,[e("a",O,[a("子动态修改父值"),t(n)])]),e("p",null,[e("a",C,[a("父调用子组件方法"),t(n)])]),e("p",null,[e("a",Y,[a("子组件调用父组件方法"),t(n)])]),D,e("p",null,[e("a",J,[a("1"),t(n)])]),e("p",null,[e("a",T,[a("2"),t(n)])]),e("p",null,[e("a",E,[a("3"),t(n)])]),L,e("p",null,[e("a",H,[a("网址"),t(n)])]),e("p",null,[e("a",z,[a("网址2"),t(n)])]),$,e("p",null,[e("a",A,[a("网址"),t(n)])]),B,e("p",null,[e("a",I,[a("网址"),t(n)])]),P,e("p",null,[e("a",U,[a("网址"),t(n)])]),X,e("p",null,[e("a",G,[a("https://blog.csdn.net/qq_41635167/article/details/103899769"),t(n)])]),Q,e("ul",null,[e("li",null,[R,W,e("p",null,[a("要npm install --save "),e("a",Z,[a("socket.io"),t(n)]),a(" ,还可npm install -g nodemon 全局下载nodemon替换node,")]),F,K]),ee,e("li",null,[ae,e("p",null,[e("a",ne,[a("本人错误在直接导入socket.io"),t(n)]),a(" 而不是client包下的socket.io.dev.js,因此小细节而花费四天时间，┗|｀O′|┛ 嗷~~，来自程序猿的卑微怒吼")])])]),te])}const de=r(p,[["render",se],["__file","Vue 笔记.html.vue"]]);export{de as default};
