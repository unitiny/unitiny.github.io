import{_ as a,W as i,X as e,a2 as t}from"./framework-5d92cd28.js";const g="/assets/image-20230327163939689-19f67e13.png",n="/assets/image-20230327164211532-e64964cf.png",r="/assets/image-20230327164330654-c75a741b.png",s="/assets/image-20230327164719176-b07283dc.png",c="/assets/image-20230327164809057-a1cf5aa2.png",o="/assets/image-20230327164918617-1e2d3353.png",d="/assets/image-20230327165034096-0ae4a2f1.png",f="/assets/image-20230327165233431-205c984d.png",p="/assets/image-20230327172102465-9e91e848.png",m="/assets/image-20230327172046520-a717bd2d.png",l="/assets/image-20230327172024607-85a409a0.png",h={},u=t('<h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><h3 id="主流消息队列" tabindex="-1"><a class="header-anchor" href="#主流消息队列" aria-hidden="true">#</a> 主流消息队列</h3><p>rocketMQ：阿里开发，经受双十一的考验</p><p>kafka:多用于大数据，有低出错几率</p><figure><img src="'+g+'" alt="image-20230327163939689" tabindex="0" loading="lazy"><figcaption>image-20230327163939689</figcaption></figure><p>RabbitMQ：最主流</p><figure><img src="'+n+'" alt="image-20230327164211532" tabindex="0" loading="lazy"><figcaption>image-20230327164211532</figcaption></figure><h3 id="amqp协议" tabindex="-1"><a class="header-anchor" href="#amqp协议" aria-hidden="true">#</a> AMQP协议</h3><ul><li>Broker：代表rabbitMQ中间件</li><li>Host: 虚拟机，隔绝环境</li><li>Connection: 与生产者消费者的TCP连接</li><li>Channel: 每个线程都会创建一个管道</li></ul><figure><img src="'+r+'" alt="image-20230327164330654" tabindex="0" loading="lazy"><figcaption>image-20230327164330654</figcaption></figure><figure><img src="'+s+'" alt="image-20230327164719176" tabindex="0" loading="lazy"><figcaption>image-20230327164719176</figcaption></figure><figure><img src="'+c+'" alt="image-20230327164809057" tabindex="0" loading="lazy"><figcaption>image-20230327164809057</figcaption></figure><h3 id="exchange交换机" tabindex="-1"><a class="header-anchor" href="#exchange交换机" aria-hidden="true">#</a> Exchange交换机</h3><figure><img src="'+o+'" alt="image-20230327164918617" tabindex="0" loading="lazy"><figcaption>image-20230327164918617</figcaption></figure><h4 id="direct" tabindex="-1"><a class="header-anchor" href="#direct" aria-hidden="true">#</a> Direct</h4><p>直接交换机，只发到对应Key的队列</p><figure><img src="'+d+'" alt="image-20230327165034096" tabindex="0" loading="lazy"><figcaption>image-20230327165034096</figcaption></figure><h4 id="fanout" tabindex="-1"><a class="header-anchor" href="#fanout" aria-hidden="true">#</a> Fanout</h4><p>扇形展开，相当于广播</p><figure><img src="'+f+'" alt="image-20230327165233431" tabindex="0" loading="lazy"><figcaption>image-20230327165233431</figcaption></figure><h4 id="topic" tabindex="-1"><a class="header-anchor" href="#topic" aria-hidden="true">#</a> Topic</h4><p>有路由匹配</p><figure><img src="'+p+'" alt="image-20230327172102465" tabindex="0" loading="lazy"><figcaption>image-20230327172102465</figcaption></figure><figure><img src="'+m+'" alt="image-20230327172046520" tabindex="0" loading="lazy"><figcaption>image-20230327172046520</figcaption></figure><figure><img src="'+l+'" alt="image-20230327172024607" tabindex="0" loading="lazy"><figcaption>image-20230327172024607</figcaption></figure>',25),_=[u];function b(x,y){return i(),e("div",null,_)}const k=a(h,[["render",b],["__file","RabbitMQ.html.vue"]]);export{k as default};
