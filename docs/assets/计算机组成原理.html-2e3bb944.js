import{_ as a,W as i,X as e,a2 as g}from"./framework-5d92cd28.js";const t="/assets/image-20230114212058599-d856ba8d.png",n="/assets/image-20230114212403107-1a107588.png",s="/assets/image-20230114212702698-18d69600.png",r="/assets/image-20230114212742773-cc2b30df.png",c="/assets/image-20230114213435761-42507684.png",o="/assets/image-20230114213612155-9852151f.png",d="/assets/image-20230114214135154-611ed734.png",f="/assets/image-20230114214630902-d5cccd60.png",m="/assets/image-20230114215914128-500f523f.png",p="/assets/image-20230114220051331-c9aa7f13.png",l="/assets/image-20230114220604628-1fff87ad.png",h="/assets/image-20230114220818939-c56f31e4.png",u="/assets/image-20230116205544440-20ab743b.png",_="/assets/image-20230116211007143-41bb05a0.png",b="/assets/image-20230116211137772-58749942.png",x="/assets/image-20230116211147521-ec69b42e.png",y="/assets/image-20230116211640034-b76bdbf4.png",z="/assets/image-20230116212810675-06f51631.png",H="/assets/image-20230117221656403-88b69700.png",B="/assets/image-20230117222511031-5af528eb.png",D="/assets/image-20230117222843957-ec252b77.png",V="/assets/image-20230117223957476-2707ff89.png",k="/assets/image-20230118183531165-81acfe83.png",v="/assets/image-20230118184013955-45db1df5.png",C="/assets/image-20230118212019198-7e64bd7a.png",I="/assets/image-20230118211450439-597bd866.png",S="/assets/image-20230118220832280-83560044.png",A="/assets/image-20230125112317118-fe939635.png",E="/assets/image-20230126131355536-7c6c4b32.png",G="/assets/image-20230126131537246-f92e96a6.png",N="/assets/image-20230126132124650-e767fa24.png",P="/assets/image-20230128122915433-4fa14157.png",W="/assets/image-20230128125032850-ae7ba75c.png",X="/assets/image-20230128123228314-314aea86.png",j="/assets/image-20230128123547909-a7f27414.png",q="/assets/image-20230128123921930-84e48957.png",w="/assets/image-20230128124346463-a108e519.png",F="/assets/image-20230128124326545-e21d241b.png",J="/assets/image-20230128125815623-ef8d233d.png",K="/assets/image-20230128130713009-c8d8cca5.png",L="/assets/image-20230129095120403-0eb5cd01.png",M="/assets/image-20230129095334011-ee9d8813.png",O="/assets/image-20230129095502861-02cb8d6e.png",Q="/assets/image-20230129095542700-af81c3ca.png",R="/assets/image-20230129100027692-e0e75f71.png",T="/assets/image-20230129102154036-08158e1f.png",U="/assets/image-20230129103134479-80ba2eac.png",Y="/assets/image-20230129103544674-ab9d000e.png",Z="/assets/image-20230129103837396-2fedac91.png",$="/assets/image-20230129104241400-c29fdc1d.png",aa="/assets/image-20230130131316796-ae486436.png",ia="/assets/image-20230130133447812-b05204a6.png",ea="/assets/image-20230130132912704-aa6762eb.png",ga="/assets/image-20230130133242901-0bda7fa5.png",ta={},na=g('<h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h2><h3 id="历史1" tabindex="-1"><a class="header-anchor" href="#历史1" aria-hidden="true">#</a> 历史1</h3><figure><img src="'+t+'" alt="image-20230114212058599" tabindex="0" loading="lazy"><figcaption>image-20230114212058599</figcaption></figure><figure><img src="'+n+'" alt="image-20230114212403107" tabindex="0" loading="lazy"><figcaption>image-20230114212403107</figcaption></figure><figure><img src="'+s+'" alt="image-20230114212702698" tabindex="0" loading="lazy"><figcaption>image-20230114212702698</figcaption></figure><figure><img src="'+r+'" alt="image-20230114212742773" tabindex="0" loading="lazy"><figcaption>image-20230114212742773</figcaption></figure><h3 id="结构" tabindex="-1"><a class="header-anchor" href="#结构" aria-hidden="true">#</a> 结构</h3><figure><img src="'+c+'" alt="image-20230114213435761" tabindex="0" loading="lazy"><figcaption>image-20230114213435761</figcaption></figure><figure><img src="'+o+'" alt="image-20230114213612155" tabindex="0" loading="lazy"><figcaption>image-20230114213612155</figcaption></figure><h3 id="主存储器" tabindex="-1"><a class="header-anchor" href="#主存储器" aria-hidden="true">#</a> 主存储器</h3><figure><img src="'+d+'" alt="image-20230114214135154" tabindex="0" loading="lazy"><figcaption>image-20230114214135154</figcaption></figure><figure><img src="'+f+'" alt="image-20230114214630902" tabindex="0" loading="lazy"><figcaption>image-20230114214630902</figcaption></figure><h3 id="运算器" tabindex="-1"><a class="header-anchor" href="#运算器" aria-hidden="true">#</a> 运算器</h3><figure><img src="'+m+'" alt="image-20230114215914128" tabindex="0" loading="lazy"><figcaption>image-20230114215914128</figcaption></figure><h3 id="控制器" tabindex="-1"><a class="header-anchor" href="#控制器" aria-hidden="true">#</a> 控制器</h3><figure><img src="'+p+'" alt="image-20230114220051331" tabindex="0" loading="lazy"><figcaption>image-20230114220051331</figcaption></figure><h3 id="工作过程" tabindex="-1"><a class="header-anchor" href="#工作过程" aria-hidden="true">#</a> 工作过程</h3><p>计算 y=a*b+c,都是取指令，分析指令，执行指令</p><figure><img src="'+l+'" alt="image-20230114220604628" tabindex="0" loading="lazy"><figcaption>image-20230114220604628</figcaption></figure><figure><img src="'+h+'" alt="image-20230114220818939" tabindex="0" loading="lazy"><figcaption>image-20230114220818939</figcaption></figure><h3 id="层次结构" tabindex="-1"><a class="header-anchor" href="#层次结构" aria-hidden="true">#</a> 层次结构</h3><figure><img src="'+u+'" alt="image-20230116205544440" tabindex="0" loading="lazy"><figcaption>image-20230116205544440</figcaption></figure><h3 id="性能指标" tabindex="-1"><a class="header-anchor" href="#性能指标" aria-hidden="true">#</a> 性能指标</h3><figure><img src="'+_+'" alt="image-20230116211007143" tabindex="0" loading="lazy"><figcaption>image-20230116211007143</figcaption></figure><figure><img src="'+b+'" alt="image-20230116211137772" tabindex="0" loading="lazy"><figcaption>image-20230116211137772</figcaption></figure><figure><img src="'+x+'" alt="image-20230116211147521" tabindex="0" loading="lazy"><figcaption>image-20230116211147521</figcaption></figure><figure><img src="'+y+'" alt="image-20230116211640034" tabindex="0" loading="lazy"><figcaption>image-20230116211640034</figcaption></figure><h3 id="进制转换" tabindex="-1"><a class="header-anchor" href="#进制转换" aria-hidden="true">#</a> 进制转换</h3><figure><img src="'+z+'" alt="image-20230116212810675" tabindex="0" loading="lazy"><figcaption>image-20230116212810675</figcaption></figure><h3 id="bcd码" tabindex="-1"><a class="header-anchor" href="#bcd码" aria-hidden="true">#</a> BCD码</h3><p>方便二进制转换为十进制</p><h4 id="_8421码" tabindex="-1"><a class="header-anchor" href="#_8421码" aria-hidden="true">#</a> 8421码</h4><p>按映射关系用四位比特表示0-9，10-15不在映射关系中，则需加6（0110）修正。</p><p>13的二进制为1101，其8421码通过+6修正变为0001 0011，使每位数对应一个四位的二进制数，方便阅读</p><figure><img src="'+H+'" alt="image-20230117221656403" tabindex="0" loading="lazy"><figcaption>image-20230117221656403</figcaption></figure><h4 id="余3码" tabindex="-1"><a class="header-anchor" href="#余3码" aria-hidden="true">#</a> 余3码</h4><p>8421码加上3就是余3码</p><figure><img src="'+B+'" alt="image-20230117222511031" tabindex="0" loading="lazy"><figcaption>image-20230117222511031</figcaption></figure><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h3><h4 id="ascii码" tabindex="-1"><a class="header-anchor" href="#ascii码" aria-hidden="true">#</a> ASCII码</h4><figure><img src="'+D+'" alt="image-20230117222843957" tabindex="0" loading="lazy"><figcaption>image-20230117222843957</figcaption></figure><h4 id="gb2312-80" tabindex="-1"><a class="header-anchor" href="#gb2312-80" aria-hidden="true">#</a> GB2312-80</h4><figure><img src="'+V+'" alt="image-20230117223957476" tabindex="0" loading="lazy"><figcaption>image-20230117223957476</figcaption></figure><h3 id="数据校验" tabindex="-1"><a class="header-anchor" href="#数据校验" aria-hidden="true">#</a> 数据校验</h3><figure><img src="'+k+'" alt="image-20230118183531165" tabindex="0" loading="lazy"><figcaption>image-20230118183531165</figcaption></figure><h4 id="奇偶校验" tabindex="-1"><a class="header-anchor" href="#奇偶校验" aria-hidden="true">#</a> 奇偶校验</h4><p>奇校验码：若后七位不为奇数，则首位为1，否则为0</p><p>偶校验码：若后七位不为偶数，则首位为1，否则为0</p><p>局限性：若有两个比特发生变化，仍会认为是正确的</p><figure><img src="'+v+'" alt="image-20230118184013955" tabindex="0" loading="lazy"><figcaption>image-20230118184013955</figcaption></figure><h4 id="海明码" tabindex="-1"><a class="header-anchor" href="#海明码" aria-hidden="true">#</a> 海明码</h4><p>基于只有一个比特出错的情况下能纠错</p><p>P1的分组为1101，取1对应的H,即H3,H5,H7。H6对应位是0，不在分组中。</p><p>而H3,H5,H7对应信息位为D1,D2,D4</p><figure><img src="'+C+'" alt="image-20230118212019198" tabindex="0" loading="lazy"><figcaption>image-20230118212019198</figcaption></figure><figure><img src="'+I+'" alt="image-20230118211450439" tabindex="0" loading="lazy"><figcaption>image-20230118211450439</figcaption></figure><figure><img src="'+S+'" alt="image-20230118220832280" tabindex="0" loading="lazy"><figcaption>image-20230118220832280</figcaption></figure><h4 id="循环冗余校验码" tabindex="-1"><a class="header-anchor" href="#循环冗余校验码" aria-hidden="true">#</a> 循环冗余校验码</h4><p>一般用于计算机网络传输的校验数据对错。使用几千bit加上几个校验位即可检验对错。</p><figure><img src="'+A+'" alt="image-20230125112317118" tabindex="0" loading="lazy"><figcaption>image-20230125112317118</figcaption></figure><p>模2除</p><figure><img src="'+E+'" alt="image-20230126131355536" tabindex="0" loading="lazy"><figcaption>image-20230126131355536</figcaption></figure><figure><img src="'+G+'" alt="image-20230126131537246" tabindex="0" loading="lazy"><figcaption>image-20230126131537246</figcaption></figure><figure><img src="'+N+'" alt="image-20230126132124650" tabindex="0" loading="lazy"><figcaption>image-20230126132124650</figcaption></figure><h3 id="定点数" tabindex="-1"><a class="header-anchor" href="#定点数" aria-hidden="true">#</a> 定点数</h3><figure><img src="'+P+'" alt="image-20230128122915433" tabindex="0" loading="lazy"><figcaption>image-20230128122915433</figcaption></figure><figure><img src="'+W+'" alt="image-20230128125032850" tabindex="0" loading="lazy"><figcaption>image-20230128125032850</figcaption></figure><h4 id="原码" tabindex="-1"><a class="header-anchor" href="#原码" aria-hidden="true">#</a> 原码</h4><figure><img src="'+X+'" alt="image-20230128123228314" tabindex="0" loading="lazy"><figcaption>image-20230128123228314</figcaption></figure><h4 id="反码" tabindex="-1"><a class="header-anchor" href="#反码" aria-hidden="true">#</a> 反码<img src="'+j+'" alt="image-20230128123547909" loading="lazy"></h4><h4 id="补码" tabindex="-1"><a class="header-anchor" href="#补码" aria-hidden="true">#</a> 补码</h4><p>补码转原码：尾数取反再加1</p><figure><img src="'+q+'" alt="image-20230128123921930" tabindex="0" loading="lazy"><figcaption>image-20230128123921930</figcaption></figure><h4 id="移码" tabindex="-1"><a class="header-anchor" href="#移码" aria-hidden="true">#</a> 移码</h4><p>用于整数的真值比较</p><figure><img src="'+w+'" alt="image-20230128124346463" tabindex="0" loading="lazy"><figcaption>image-20230128124346463</figcaption></figure><figure><img src="'+F+'" alt="image-20230128124326545" tabindex="0" loading="lazy"><figcaption>image-20230128124326545</figcaption></figure><h3 id="模运算" tabindex="-1"><a class="header-anchor" href="#模运算" aria-hidden="true">#</a> 模运算</h3><p>以8位为例，计算机对超过2的8次方的数会丢弃首位，相当于取mod 2的8次方，天然支持取mod运算.</p><figure><img src="'+J+'" alt="image-20230128125815623" tabindex="0" loading="lazy"><figcaption>image-20230128125815623</figcaption></figure><p>减一个数可以变成加它的补数</p><figure><img src="'+K+'" alt="image-20230128130713009" tabindex="0" loading="lazy"><figcaption>image-20230128130713009</figcaption></figure><h3 id="移位运算" tabindex="-1"><a class="header-anchor" href="#移位运算" aria-hidden="true">#</a> 移位运算</h3><figure><img src="'+L+'" alt="image-20230129095120403" tabindex="0" loading="lazy"><figcaption>image-20230129095120403</figcaption></figure><figure><img src="'+M+'" alt="image-20230129095334011" tabindex="0" loading="lazy"><figcaption>image-20230129095334011</figcaption></figure><figure><img src="'+O+'" alt="image-20230129095502861" tabindex="0" loading="lazy"><figcaption>image-20230129095502861</figcaption></figure><figure><img src="'+Q+'" alt="image-20230129095542700" tabindex="0" loading="lazy"><figcaption>image-20230129095542700</figcaption></figure><figure><img src="'+R+'" alt="image-20230129100027692" tabindex="0" loading="lazy"><figcaption>image-20230129100027692</figcaption></figure><h3 id="加减运算" tabindex="-1"><a class="header-anchor" href="#加减运算" aria-hidden="true">#</a> 加减运算</h3><figure><img src="'+T+'" alt="image-20230129102154036" tabindex="0" loading="lazy"><figcaption>image-20230129102154036</figcaption></figure><h3 id="溢出判断" tabindex="-1"><a class="header-anchor" href="#溢出判断" aria-hidden="true">#</a> 溢出判断</h3><p>若不溢出，正正只能得到正数，负负只能得到负数，V一直等于0。而V不等于0则说明溢出了</p><figure><img src="'+U+'" alt="image-20230129103134479" tabindex="0" loading="lazy"><figcaption>image-20230129103134479</figcaption></figure><p>进位和符号位都为0或都为1的时候才算正常的，否则代表溢出。可以用异或来判断</p><figure><img src="'+Y+'" alt="image-20230129103544674" tabindex="0" loading="lazy"><figcaption>image-20230129103544674</figcaption></figure><figure><img src="'+Z+'" alt="image-20230129103837396" tabindex="0" loading="lazy"><figcaption>image-20230129103837396</figcaption></figure><p>符号扩展</p><figure><img src="'+$+'" alt="image-20230129104241400" tabindex="0" loading="lazy"><figcaption>image-20230129104241400</figcaption></figure><h3 id="乘法运算" tabindex="-1"><a class="header-anchor" href="#乘法运算" aria-hidden="true">#</a> 乘法运算</h3><h4 id="原码乘法" tabindex="-1"><a class="header-anchor" href="#原码乘法" aria-hidden="true">#</a> 原码乘法</h4><figure><img src="'+aa+'" alt="image-20230130131316796" tabindex="0" loading="lazy"><figcaption>image-20230130131316796</figcaption></figure><h4 id="补码乘法" tabindex="-1"><a class="header-anchor" href="#补码乘法" aria-hidden="true">#</a> 补码乘法</h4><figure><img src="'+ia+'" alt="image-20230130133447812" tabindex="0" loading="lazy"><figcaption>image-20230130133447812</figcaption></figure><figure><img src="'+ea+'" alt="image-20230130132912704" tabindex="0" loading="lazy"><figcaption>image-20230130132912704</figcaption></figure><figure><img src="'+ga+'" alt="image-20230130133242901" tabindex="0" loading="lazy"><figcaption>image-20230130133242901</figcaption></figure>',105),sa=[na];function ra(ca,oa){return i(),e("div",null,sa)}const fa=a(ta,[["render",ra],["__file","计算机组成原理.html.vue"]]);export{fa as default};
