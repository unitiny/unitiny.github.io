import{_ as t,W as p,X as i,Y as n,Z as a,a0 as l,a2 as s,C as c}from"./framework-5d92cd28.js";const o={},r=s(`<h1 id="项目经验及总结" tabindex="-1"><a class="header-anchor" href="#项目经验及总结" aria-hidden="true">#</a> 项目经验及总结</h1><h2 id="凌达项目-学生信息系统展示" tabindex="-1"><a class="header-anchor" href="#凌达项目-学生信息系统展示" aria-hidden="true">#</a> 凌达项目 --- 学生信息系统展示</h2><h3 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍：</h3><h5 id="背景介绍" tabindex="-1"><a class="header-anchor" href="#背景介绍" aria-hidden="true">#</a> 背景介绍：</h5><p>展示学生的各种信息，已有pc端网站，要求做个移动端的，且界面要好看,响应式</p><h5 id="使用软件" tabindex="-1"><a class="header-anchor" href="#使用软件" aria-hidden="true">#</a> 使用软件：</h5><p>UI---------adminLTE 3 css ------- less html----------bootstrap响应式布局 js---可以</p><pre><code>使用jQuery语法     上传代码 ---------- sourcetree       共同开发  ----------- gitlab
</code></pre><h5 id="格式结构" tabindex="-1"><a class="header-anchor" href="#格式结构" aria-hidden="true">#</a> 格式结构：</h5><p>页面为php文件，使用 Html Js Css 知识开发</p><h3 id="解决的难题和收获的灵感-重点" tabindex="-1"><a class="header-anchor" href="#解决的难题和收获的灵感-重点" aria-hidden="true">#</a> 解决的难题和收获的灵感（重点）</h3><h5 id="收获1" tabindex="-1"><a class="header-anchor" href="#收获1" aria-hidden="true">#</a> 收获1：</h5><p>通过js来循环输出HTML，只需修改父级的innerHTML即可</p><h5 id="收获2" tabindex="-1"><a class="header-anchor" href="#收获2" aria-hidden="true">#</a> 收获2：</h5><p>获取div宽度来实现功能，</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$(document.getElementById(&#39;main&#39;)).width()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="问题1" tabindex="-1"><a class="header-anchor" href="#问题1" aria-hidden="true">#</a> 问题1：</h5><h6 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述：</h6><p>隔行更换颜色，但元素按宽度自动排列，连续两元素宽度50%则一行两个，连续两元素宽度一50%一 100%则变两行，如何判断换行了</p><h6 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路：</h6><p>添加变量num用于计数，判断元素为50%，num+1，元素100%，num+2。若num&gt;2即是换行了， 则使bgc=&quot;background:skybule&quot;, xxx.innerHTML+=bgc 。且当num&gt;=3时要归零（用途自己想） 即 实现效果</p><h5 id="问题2" tabindex="-1"><a class="header-anchor" href="#问题2" aria-hidden="true">#</a> 问题2：</h5><h6 id="描述-1" tabindex="-1"><a class="header-anchor" href="#描述-1" aria-hidden="true">#</a> 描述：</h6><p>多个li的链接标签，点击其中一个后该li标签样式为激活状态，且激活状态的图标代码不同，要更换。 难点：点击标签后会刷新，如何保存获取的索引值</p><h6 id="思路-1" tabindex="-1"><a class="header-anchor" href="#思路-1" aria-hidden="true">#</a> 思路：</h6><p>先for循环为每一标签添加onclick点击事件，获取当前的索引值（li各不相同的id或class都可以），使 用<code>sessionStorage.setItem(&#39;key&#39;,data)</code>暂时缓存到浏览器（关闭网页缓存清空，local Storage 则一直本地保存）以上设置为 getLiIndex() 函数</p><p>然后获取索引值 sessionStorage.getItem(&#39;key&#39;) ,通过索引值渲染特定的li标签。此设置为 setLiStyle() 函数</p><h5 id="问题3" tabindex="-1"><a class="header-anchor" href="#问题3" aria-hidden="true">#</a> 问题3：</h5><h6 id="描述-2" tabindex="-1"><a class="header-anchor" href="#描述-2" aria-hidden="true">#</a> 描述：</h6><p>pc端卡片要显示，移动端卡片要隐藏，如何实现</p><h6 id="思路-2" tabindex="-1"><a class="header-anchor" href="#思路-2" aria-hidden="true">#</a> 思路：</h6><p>通过设定宽度来区分，若大于此宽度，则为pc端，然后通过id获取特定div修改className即可</p><h5 id="问题4" tabindex="-1"><a class="header-anchor" href="#问题4" aria-hidden="true">#</a> 问题4：</h5><h6 id="描述-3" tabindex="-1"><a class="header-anchor" href="#描述-3" aria-hidden="true">#</a> 描述：</h6><p>修改className后效果与实际不符</p><h6 id="思路-3" tabindex="-1"><a class="header-anchor" href="#思路-3" aria-hidden="true">#</a> 思路：</h6><p>忽略了浏览器渲染css需要时间，在未渲染完成前修改下一个样式，可能会跳过下一样式的渲染，造成 数据流失，达不到该有效果。要使用setInterval()延时函数给时间等待渲染</p><h2 id="微信小程序-品优购商城" tabindex="-1"><a class="header-anchor" href="#微信小程序-品优购商城" aria-hidden="true">#</a> 微信小程序 --- 品优购商城</h2><h3 id="背景介绍-1" tabindex="-1"><a class="header-anchor" href="#背景介绍-1" aria-hidden="true">#</a> 背景介绍：</h3><p>已有后端数据，通过数据获取，页面样式摆放，js功能实现来搭建PYG商城</p><h3 id="使用软件-1" tabindex="-1"><a class="header-anchor" href="#使用软件-1" aria-hidden="true">#</a> 使用软件：</h3><p>微信小程序开发者工具 原生框架 MENA less语法</p><h3 id="格式结构-1" tabindex="-1"><a class="header-anchor" href="#格式结构-1" aria-hidden="true">#</a> 格式结构：</h3><p>wxml wxss js json less类文件</p><h3 id="难题和收获" tabindex="-1"><a class="header-anchor" href="#难题和收获" aria-hidden="true">#</a> 难题和收获:</h3><h4 id="收获1-css-flex布局" tabindex="-1"><a class="header-anchor" href="#收获1-css-flex布局" aria-hidden="true">#</a> 收获1：css flex布局</h4><p>css的flex布局更加熟练，样式掌握更多</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>//子项目宽|高 比为2：3
<span class="token property">flex</span><span class="token punctuation">:</span>2
<span class="token property">flex</span><span class="token punctuation">:</span>3

//定义主题颜色变量
定义： <span class="token property">--themeColor</span><span class="token punctuation">:</span>skybule
使用： <span class="token function">var</span><span class="token punctuation">(</span>--themeColor<span class="token punctuation">)</span>
    
//文本格式和省略号
//以下为第二行多出的文本内容省略号代替
<span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
<span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>
<span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="收获2-封装代码" tabindex="-1"><a class="header-anchor" href="#收获2-封装代码" aria-hidden="true">#</a> 收获2：封装代码</h4><p>将wx.request内容打包成Promise对象，要使用则引入文件，可减少代码量</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 多个异步请求同时发生的次数</span>
<span class="token keyword">let</span> ajaxTimes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    ajaxTimes<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token comment">//显示加载中</span>
    wx<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;加载中&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">mask</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reslove<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">//定义公共部分url</span>
        <span class="token keyword">const</span> baseUrl <span class="token operator">=</span> <span class="token string">&quot;https://api-hmugo-web.itheima.net/api/public/v1&quot;</span>
        wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token operator">...</span>params<span class="token punctuation">,</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> baseUrl <span class="token operator">+</span> params<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">reslove</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                ajaxTimes<span class="token operator">--</span><span class="token punctuation">;</span>
                ajaxTimes <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> wx<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="收获3-组件使用" tabindex="-1"><a class="header-anchor" href="#收获3-组件使用" aria-hidden="true">#</a> 收获3：组件使用</h4><p>滑至底部触发函数 加载界面函数 下拉刷新函数</p><p>轮播图swiper及参数 autoplay(自动播放) circular(循环播放) indicator-dots(索引圆点)</p><p>富文本 rich-text 可加入js渲染的html区块</p><p>重组数据 将现有的goodlist与res.data拼接</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">goodlist</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>goodlist<span class="token punctuation">,</span><span class="token operator">...</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有框架后，html可以接收和发送参数就可以极少使用js的document.getElementById()之类函数了</p><h3 id="收获4-功能" tabindex="-1"><a class="header-anchor" href="#收获4-功能" aria-hidden="true">#</a> 收获4：功能</h3><p>全选和反选功能</p><p>勾选商品并重新计算数据</p><h3 id="收获5-数组方法" tabindex="-1"><a class="header-anchor" href="#收获5-数组方法" aria-hidden="true">#</a> 收获5：数组方法</h3><h5 id="数组遍历几种心得" tabindex="-1"><a class="header-anchor" href="#数组遍历几种心得" aria-hidden="true">#</a> 数组遍历几种心得</h5><p>array.forEach 遍历中要执行复杂的操作</p><p>array.map 想提取数组里面的某一元素构成新数组,也可新增属性</p><p>array.findIndex 遍历查询索引值的时候，返回查询到的数据</p><p>array.every 子元素全部为true才返回true,否则返回false，类似总审核</p><p>array.some 子元素有一个返回true，即返回true，类似筛选</p><p>array.filter 过滤操作，返回选中的元素构成一新数组</p><h2 id="uniapp-微信小程序-懂你找图" tabindex="-1"><a class="header-anchor" href="#uniapp-微信小程序-懂你找图" aria-hidden="true">#</a> uniapp 微信小程序 --- 懂你找图</h2><h3 id="收获1-下载文件" tabindex="-1"><a class="header-anchor" href="#收获1-下载文件" aria-hidden="true">#</a> 收获1：下载文件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">// 用户下载到设备中</span>
      <span class="token keyword">const</span> result2 <span class="token operator">=</span> <span class="token keyword">await</span> uni<span class="token punctuation">.</span><span class="token function">saveImageToPhotosAlbum</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">filePath</span><span class="token operator">:</span> tempFilePath<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">// 将远程文件下载到小程序的内存中</span>
      <span class="token keyword">const</span> result1 <span class="token operator">=</span> <span class="token keyword">await</span> uni<span class="token punctuation">.</span><span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>imgDetail<span class="token punctuation">.</span>img
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="收获2-自定义左右滑动组件" tabindex="-1"><a class="header-anchor" href="#收获2-自定义左右滑动组件" aria-hidden="true">#</a> 收获2： 自定义左右滑动组件</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token operator">&lt;</span>view @touchstart<span class="token operator">=</span><span class="token string">&quot;handleTouchStart&quot;</span>
        @touchend<span class="token operator">=</span><span class="token string">&quot;handleTouchEnd&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>view<span class="token operator">&gt;</span>

<span class="token comment">// 通过touchstart,touchend 触发点击开始和离开后的事件，可以获取开始和离开的时间，点击坐标来判断滑动方向</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="收获3-视频静音-转发功能" tabindex="-1"><a class="header-anchor" href="#收获3-视频静音-转发功能" aria-hidden="true">#</a> 收获3：视频静音，转发功能</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 视频静音 muted的true或false控制 </span>
<span class="token comment">// objectFit 宽度填充百分百</span>
<span class="token operator">&lt;</span>video <span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">&quot;videoObj.video&quot;</span>
       objectFit<span class="token operator">=</span><span class="token string">&quot;fill&quot;</span>
       <span class="token operator">:</span>muted<span class="token operator">=</span><span class="token string">&quot;muted&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>video<span class="token operator">&gt;</span>

<span class="token comment">// 转发 加入open-type</span>
<span class="token operator">&lt;</span>button open<span class="token operator">-</span>type<span class="token operator">=</span><span class="token string">&quot;share&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="收获4-使用moment转换时间格式" tabindex="-1"><a class="header-anchor" href="#收获4-使用moment转换时间格式" aria-hidden="true">#</a> 收获4 ：使用moment转换时间格式</h3><h3 id="收获5-下拉触底加载下一页功能" tabindex="-1"><a class="header-anchor" href="#收获5-下拉触底加载下一页功能" aria-hidden="true">#</a> 收获5：下拉触底加载下一页功能</h3><h3 id="收获6-自定义左右滑动组件" tabindex="-1"><a class="header-anchor" href="#收获6-自定义左右滑动组件" aria-hidden="true">#</a> 收获6：自定义左右滑动组件</h3><h2 id="uniapp-微信小程序-品优购" tabindex="-1"><a class="header-anchor" href="#uniapp-微信小程序-品优购" aria-hidden="true">#</a> uniapp 微信小程序 --- 品优购</h2><h3 id="制作感想" tabindex="-1"><a class="header-anchor" href="#制作感想" aria-hidden="true">#</a> 制作感想：</h3><h4 id="_1-制作左侧索引栏" tabindex="-1"><a class="header-anchor" href="#_1-制作左侧索引栏" aria-hidden="true">#</a> 1 制作左侧索引栏</h4><ul><li>想法1：</li></ul><p>为cateList数组每一个元素添加一个isSelect元素，再在遍历时判断isSelect是否为true，来添加class样式。</p><p>问题：未实现用map()向字符串数组添加新属性，且新增数据过多，对编译不友好。处理问题显得笨重</p><ul><li>想法2：</li></ul><p>定义变量 currentIndex,每次点击item后赋值currentIndex=index。然后遍历时只需判断currentIndex是否等于该item的index即可。解法更优</p><h4 id="_2-两个独立的侧边滑动栏" tabindex="-1"><a class="header-anchor" href="#_2-两个独立的侧边滑动栏" aria-hidden="true">#</a> 2 两个独立的侧边滑动栏</h4><p>问题：又忘记要给滑动栏添加固定高度了</p><h4 id="_3-croll-view组件设置scroll-top无效" tabindex="-1"><a class="header-anchor" href="#_3-croll-view组件设置scroll-top无效" aria-hidden="true">#</a> 3 croll-view组件设置scroll-top无效</h4>`,90),u={href:"https://www.jianshu.com/p/51c25d126750",target:"_blank",rel:"noopener noreferrer"},d=s(`<h4 id="_4-获取页面传递参数" tabindex="-1"><a class="header-anchor" href="#_4-获取页面传递参数" aria-hidden="true">#</a> 4 获取页面传递参数</h4><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>onLoad (option) {
 },
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="php-论坛-sfkbbs" tabindex="-1"><a class="header-anchor" href="#php-论坛-sfkbbs" aria-hidden="true">#</a> php 论坛 --- sfkbbs</h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍：</h3><p>用PHP制作后台，前端用基础三大语言，数据库MySQL</p><p>管理员账号 admin aaa 密码都为 111111</p><h3 id="收获" tabindex="-1"><a class="header-anchor" href="#收获" aria-hidden="true">#</a> 收获：</h3><h4 id="语法类" tabindex="-1"><a class="header-anchor" href="#语法类" aria-hidden="true">#</a> 语法类：</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">,</span><span class="token variable">$user</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">,</span><span class="token variable">$database</span><span class="token punctuation">,</span><span class="token variable">$post</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 连接数据库</span>

<span class="token function">mysqli_set_charset</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置字符编码</span>

<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出连接数据库错误</span>

<span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出执行语句错误</span>

<span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 执行sql语句，返回数据</span>

<span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span>  <span class="token comment">// 解析mysqli_query返回的数据</span>

<span class="token function">mysqli_real_query</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 执行sql语句，只返回布尔值</span>

<span class="token operator">&amp;</span><span class="token variable">$varible</span> <span class="token comment">// &amp;引用，类似指针，做函数参数时，不会随函数释放后而释放</span>
    
<span class="token variable">$_SERVE</span> <span class="token comment">//包含很多网址</span>
    
<span class="token comment">// 实现链接三秒后自动跳转到指定页面</span>
<span class="token operator">&lt;</span>meta http<span class="token operator">-</span>equiv<span class="token operator">=</span><span class="token string double-quoted-string">&quot;refresh&quot;</span> content<span class="token operator">=</span><span class="token string double-quoted-string">&quot;3;URL=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$url</span><span class="token punctuation">}</span></span>&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span> 

<span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;SCRIPT_NAME&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 获取当前网址的文件名</span>

<span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;module_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">// 判断数据是否为空</span>

<span class="token function">mb_strlen</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;module_name&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 判断字符串长度 要转为utf-8计算</span>

<span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;sort&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token comment">// 判断是否是数字</span>

<span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 字符串小写化</span>

<span class="token function">md5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 加密字符串</span>

optgroup标签实现子层菜单效果

<span class="token function">CURDATE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// sql语句中获取当前时间Y-M-D</span>

<span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">)</span>             <span class="token comment">// 去除字符串首尾的逗号，默认是空格</span>

<span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                   <span class="token comment">// 向上取整</span>

<span class="token function">http_build_query</span><span class="token punctuation">(</span><span class="token variable">$arr_query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 将数组元素组合为字符串，如1=a&amp; 2=b&amp; 3=c,url专用</span>

<span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>                      <span class="token comment">// 计算数组长度</span>

<span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>                      <span class="token comment">// 返回数组第一个单元的值</span>

<span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>                    <span class="token comment">// 返回数组中当前单元的键名</span>

<span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>                    <span class="token comment">// 将 array 的内部指针移动到最后一个单元并返回其值。</span>

<span class="token comment">// 将 array 的第一个单元移出并作为结果返回，将 array</span>
<span class="token comment">// 的长度减一并将所有其它单元向前移动一位。所有的数字键名将改为从零开始计数，文字键名将不变</span>
<span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span>  

<span class="token comment">// 弹出并返回 array 数组的最后一个单元，并将数组 array 的长度减一。</span>
<span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span> 

<span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span><span class="token variable">$var</span><span class="token punctuation">)</span>         <span class="token comment">// 插入$var到数组头部位置</span>

<span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">,</span><span class="token variable">$var</span><span class="token punctuation">)</span>           <span class="token comment">// 插入$var到数组尾部位置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题：</h3><h4 id="excute执行失败" tabindex="-1"><a class="header-anchor" href="#excute执行失败" aria-hidden="true">#</a> excute执行失败</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>原因：$query = \`delete from sfk_father_module where id={$_GET[&#39;id&#39;]}\`;无法执行
\`\`和单引号&#39;&#39;都不能正确显示{$_GET[&#39;id&#39;]}变量,要使用双引号
改正：$query = &quot;delete from sfk_father_module where id={$_GET[&#39;id&#39;]}&quot;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a标签跳转后无法加载css" tabindex="-1"><a class="header-anchor" href="#a标签跳转后无法加载css" aria-hidden="true">#</a> a标签跳转后无法加载css</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>href<span class="token operator">=</span><span class="token string double-quoted-string">&quot;../father_module_add.php&quot;</span>
要改为href<span class="token operator">=</span><span class="token string double-quoted-string">&quot;../father_module_add.php/&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="如何echo中使用变量" tabindex="-1"><a class="header-anchor" href="#如何echo中使用变量" aria-hidden="true">#</a> 如何echo中使用变量</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;option 
value=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$data_father</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>&#39;&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$data_father</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;module_name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
&lt;/option&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 注意最外层要双引号</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="unknown-column-aaa-in-field-list" tabindex="-1"><a class="header-anchor" href="#unknown-column-aaa-in-field-list" aria-hidden="true">#</a> Unknown column &#39;aaa&#39; in &#39;field list&#39;</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>原因是变量不符合数据库的字段类型，要给输入aaa的变量加引号变为字符串类型，即&#39;{$_POST[&#39;id&#39;]}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="a标签不在当前页面跳转" tabindex="-1"><a class="header-anchor" href="#a标签不在当前页面跳转" aria-hidden="true">#</a> a标签不在当前页面跳转</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>若网址尾部有/，表示进入了下一层目录，a标签跳转时自然在下一层目录跳转。删除/即可实现当前页面跳转
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="浏览器储存某变量" tabindex="-1"><a class="header-anchor" href="#浏览器储存某变量" aria-hidden="true">#</a> 浏览器储存某变量</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>session_start();
$_SESSION[&#39;vcode&#39;]; // vcode为key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="验证码加载不出来" tabindex="-1"><a class="header-anchor" href="#验证码加载不出来" aria-hidden="true">#</a> 验证码加载不出来</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>php版本问题，换到5.4版本即可
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="session无法储存变量" tabindex="-1"><a class="header-anchor" href="#session无法储存变量" aria-hidden="true">#</a> $_SESSION无法储存变量</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>情况：若只在两文件其一中使用，则login.php中调用为空
原因：调用完show_code.php，会自动关闭session_start()，故在login.php中调用需再次开启
session_start().
改正：show_code.php和config.inc.php都是用session_start(),即login.php和show_code.php
中都要使用session_start()
总结：一定要在使用之前用session_start()函数开启，本次错误在show_code.php中使用
session_start()造成未开启$SESSION。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能:</h3><h4 id="储存信息到cookie-判断是否登录状态-以防止重复注册" tabindex="-1"><a class="header-anchor" href="#储存信息到cookie-判断是否登录状态-以防止重复注册" aria-hidden="true">#</a> 储存信息到cookie，判断是否登录状态，以防止重复注册</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 储存用户信息，判断是否登录</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;sfk[&#39;name&#39;]&quot;</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;sfk[&#39;pw&#39;]&quot;</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;pw&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取多个id组成字符串的数据处理" tabindex="-1"><a class="header-anchor" href="#获取多个id组成字符串的数据处理" aria-hidden="true">#</a> 获取多个id组成字符串的数据处理</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 如此结尾会多个,用trim处理后变为 1，2，3 形式，搜索数据库时可用in({$id_son})</span>
<span class="token variable">$id_son</span><span class="token operator">.=</span><span class="token variable">$data_son</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$id_son</span><span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$id_son</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="得到url路径并拆分出参数" tabindex="-1"><a class="header-anchor" href="#得到url路径并拆分出参数" aria-hidden="true">#</a> 得到url路径并拆分出参数</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$arr_current</span><span class="token operator">=</span><span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$current_url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将当前url拆分到数组里面</span>
<span class="token variable">$current_path</span><span class="token operator">=</span><span class="token variable">$arr_current</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//将文件路径部分保存起来</span>
<span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$arr_current</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;query&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$arr_query</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 解析参数并放入$arr_query数组中</span>
<span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$arr_query</span><span class="token punctuation">[</span><span class="token variable">$page</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 销毁$arr_query[$page]的值</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获得数组的头尾部键值对-并向头尾删增元素" tabindex="-1"><a class="header-anchor" href="#获得数组的头尾部键值对-并向头尾删增元素" aria-hidden="true">#</a> 获得数组的头尾部键值对，并向头尾删增元素</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$key_first</span><span class="token operator">=</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$key_end</span><span class="token operator">=</span><span class="token function">key</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$key_first</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">array_unshift</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;&lt;a href=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$url</span><span class="token punctuation">}</span></span>=1&#39;&gt;1...&lt;/a&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$key_end</span><span class="token operator">!=</span><span class="token variable">$page_num_all</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">array_push</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;&lt;a href=&#39;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$url</span><span class="token punctuation">}</span></span>=<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$page_num_all</span><span class="token punctuation">}</span></span>&#39;&gt;...<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$page_num_all</span><span class="token punctuation">}</span></span>&lt;/a&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="内容输出带有html的换行空格代码" tabindex="-1"><a class="header-anchor" href="#内容输出带有html的换行空格代码" aria-hidden="true">#</a> 内容输出带有html的换行空格代码</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="系统信息" tabindex="-1"><a class="header-anchor" href="#系统信息" aria-hidden="true">#</a> 系统信息</h4><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>explain<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 服务器操作系统：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token constant">PHP_OS</span><span class="token delimiter important">?&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 服务器软件：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;SERVER_SOFTWARE&#39;</span><span class="token punctuation">]</span><span class="token delimiter important">?&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- MySQL 版本：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span>  <span class="token function">mysqli_get_server_info</span><span class="token punctuation">(</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 最大上传文件：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;upload_max_filesize&#39;</span><span class="token punctuation">)</span><span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 内存限制：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token function">ini_get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;memory_limit&#39;</span><span class="token punctuation">)</span><span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>phpinfo.php<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>PHP 配置信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>explain<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 程序安装位置(绝对路径)：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token constant">SA_PATH</span><span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 程序在web根目录下的位置(首页的url地址)：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token constant">SUB_URL</span><span class="token delimiter important">?&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 程序版本：sfkbbs V1.0 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.sifangku.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>[查看最新版本]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 程序作者：孙胜利 :))<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>|- 网站：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.sifangku.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>www.sifangku.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="感悟" tabindex="-1"><a class="header-anchor" href="#感悟" aria-hidden="true">#</a> 感悟：</h3><p>注册后应记录用户信息到cookie中，同时跳转到已登录的界面，屏蔽掉注册按钮。下次进入网址时，通过搜索cookie信息和数据库匹配来判断是否处于登录状态，以此禁止访问注册界面，防止重复注册。</p><h2 id="php-外链接删除" tabindex="-1"><a class="header-anchor" href="#php-外链接删除" aria-hidden="true">#</a> PHP 外链接删除</h2><h3 id="收获-1" tabindex="-1"><a class="header-anchor" href="#收获-1" aria-hidden="true">#</a> 收获：</h3><h4 id="收获1-如何在wp后台头部尾部添加js和css" tabindex="-1"><a class="header-anchor" href="#收获1-如何在wp后台头部尾部添加js和css" aria-hidden="true">#</a> 收获1：如何在wp后台头部尾部添加js和css</h4><div class="language-php+HTML line-numbers-mode" data-ext="php+HTML"><pre class="language-php+HTML"><code>/* 添加css文件 */
function wpc_add_custom_admin_css()
{
    echo &#39;&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; 
    href=&quot;&#39; . plugins_url(&#39;url/style/public.css&#39;, dirname(__FILE__)) . &#39;&quot;&gt;&#39;;
}
add_action(&#39;admin_head&#39;, &#39;wpc_add_custom_admin_css&#39;);

$num = mysqli_num_rows($data); // 获取结果条数

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="收获2-js如何通过表单向php传递额外参数" tabindex="-1"><a class="header-anchor" href="#收获2-js如何通过表单向php传递额外参数" aria-hidden="true">#</a> 收获2：js如何通过表单向php传递额外参数</h4><p>加一条隐藏的input 即可 value值写上要传的参数</p><div class="language-HTML line-numbers-mode" data-ext="HTML"><pre class="language-HTML"><code>&lt;input type=&quot;text&quot; value=&quot;1&quot; hidden&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="收获3-php向js函数传递数组或对象参数" tabindex="-1"><a class="header-anchor" href="#收获3-php向js函数传递数组或对象参数" aria-hidden="true">#</a> 收获3：php向js函数传递数组或对象参数</h4><p>1 json化</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2 字符串化，js接收再通过split()转化为数组</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;|&quot;</span><span class="token punctuation">,</span><span class="token variable">$val</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$str</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="收获4-制作自定义弹窗" tabindex="-1"><a class="header-anchor" href="#收获4-制作自定义弹窗" aria-hidden="true">#</a> 收获4：制作自定义弹窗</h4><h4 id="收获5-正则表达式" tabindex="-1"><a class="header-anchor" href="#收获5-正则表达式" aria-hidden="true">#</a> 收获5：正则表达式</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 正则匹配链接、文章内容链接、文章ip地址</span>
$reg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/&lt;a href=&quot;(https:\\/\\/.+?|http:\\/\\/.+?)\\&quot;/m&#39;</span><span class="token punctuation">;</span>
$reg<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/(http?|https?|ftp|file):\\/\\/[-A-Za-z0-9+&amp;@#\\/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#\\/%=~_|]/m&#39;</span><span class="token punctuation">;</span>
$reg<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;/((1[0-9][0-9]\\.)|(2[0-4][0-9]\\.)|(25[0-5]\\.)|([1-9][0-9]\\.)|([0-9]\\.)){3}((1[0-9][0-9])|(2[0-4][0-9])|(25[0-5])|([1-9][0-9])|([0-9]))([-A-Za-z0-9+&amp;@#\\/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#\\/%=~_|])?/m&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="收获6-滚动至头尾部" tabindex="-1"><a class="header-anchor" href="#收获6-滚动至头尾部" aria-hidden="true">#</a> 收获6：滚动至头尾部</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 滚动至头尾部位置</span>
<span class="token keyword">function</span> <span class="token function">scrollToSpot</span><span class="token punctuation">(</span><span class="token parameter">way</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>way <span class="token operator">==</span> <span class="token string">&#39;up&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>way <span class="token operator">==</span> <span class="token string">&#39;down&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="问题-1" tabindex="-1"><a class="header-anchor" href="#问题-1" aria-hidden="true">#</a> 问题：</h3><h4 id="strpos-无法查询相同的字符串" tabindex="-1"><a class="header-anchor" href="#strpos-无法查询相同的字符串" aria-hidden="true">#</a> strpos() 无法查询相同的字符串</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>原因：strpos($str,$find)返回$find在$str中的位置，若两者一模一样，则返回的位置是零。显示的
效果像匹配错误一样
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网页三兄弟-网页制作-花瓣网" tabindex="-1"><a class="header-anchor" href="#网页三兄弟-网页制作-花瓣网" aria-hidden="true">#</a> 网页三兄弟 网页制作 --- 花瓣网</h2><h3 id="功能-1" tabindex="-1"><a class="header-anchor" href="#功能-1" aria-hidden="true">#</a> 功能：</h3><p>1 广告轮播</p><p>在js中使用setInterval 函数，for循环遍历将所有图片opacity透明度变零，另给index，使index的图片opacity变1，即呈现消失出现效果。然后index++，指定下一图片。但index超过图片数，则归零重来。</p><p>2 吸顶效果</p><p>用 window.onscroll 监听滚轮位置，用document.documentElement.scrollTop获取滚轮高度，再display:none或block即可</p><p>3 返回顶部</p><p>onclick=&quot;return header&quot; header为HTML标签</p><h2 id="前后端尝试-用户管理系统" tabindex="-1"><a class="header-anchor" href="#前后端尝试-用户管理系统" aria-hidden="true">#</a> 前后端尝试 --- 用户管理系统</h2><h3 id="所用语言" tabindex="-1"><a class="header-anchor" href="#所用语言" aria-hidden="true">#</a> 所用语言</h3><p>前端 html css javascript</p><p>后端 php mysql</p><p>其他 pdo ajax</p><h3 id="功能-2" tabindex="-1"><a class="header-anchor" href="#功能-2" aria-hidden="true">#</a> 功能：</h3>`,75),k=n("ul",null,[n("li",null,[n("p",null,"使用math.random 函数可产生随机数和随机颜色")]),n("li",null,[n("p",null,"js与PHP交互"),n("p",null,"用ajax 的var xhr =new XMLHTTPREQUEST()，即可xhr.open 打开PHP，xhr.onload=function(){}加载PHP并可写入js操作，然后PHP用ehco 传回判断的值，js x=this.responseText接收并执行相应操作。(这里不清楚为什么js调用的PHP中并不能用echo执行js语法，所以才传值回给js)")]),n("li",null,[n("p",null,"PHP与数据库交互"),n("p",null,[a("用PHP的pdo方法，"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"p"),n("mi",null,"d"),n("mi",null,"o"),n("mo",null,"="),n("mi",null,"n"),n("mi",null,"e"),n("mi",null,"w"),n("mi",null,"P"),n("mi",null,"D"),n("mi",null,"O"),n("mo",{stretchy:"false"},"("),n("mtext",null,"一系列参数"),n("mo",{stretchy:"false"},")"),n("mtext",null,"，")]),n("annotation",{encoding:"application/x-tex"},"pdo=new PDO(一系列参数)，")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"p"),n("span",{class:"mord mathnormal"},"d"),n("span",{class:"mord mathnormal"},"o"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"n"),n("span",{class:"mord mathnormal"},"e"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"wP"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),n("span",{class:"mopen"},"("),n("span",{class:"mord cjk_fallback"},"一系列参数"),n("span",{class:"mclose"},")"),n("span",{class:"mord cjk_fallback"},"，")])])]),a("sql=”” 写入数据库语句，再$sql->exec()执行或prepare加execute执行")])])],-1),v=s(`<h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h3><ul><li>功能函数最好不参杂某一特定标签，如此可以随时调用此功能。否则就像verifyCode只能用于登录注册，因为函数已经$(‘login’)之类写死了，外部改变不了参数。</li><li>全局变量在函数中要return 才能保存改变的数值，且xhr.onload=function(){}中不可return 。</li><li>注意child Node会使用空字段占用一个位置</li><li>数据库要注册才能插入调用等操作</li></ul><h2 id="wordpress主题开发-仿中山大学岭南大学网站" tabindex="-1"><a class="header-anchor" href="#wordpress主题开发-仿中山大学岭南大学网站" aria-hidden="true">#</a> wordpress主题开发 仿中山大学岭南大学网站</h2><h3 id="遇到难题" tabindex="-1"><a class="header-anchor" href="#遇到难题" aria-hidden="true">#</a> 遇到难题：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>在a标签中&lt;?php get_the_content() ?&gt;不发挥作用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>菜单栏如何从点击展开到hover展开的改变</p><h3 id="项目功能" tabindex="-1"><a class="header-anchor" href="#项目功能" aria-hidden="true">#</a> 项目功能：</h3><p>首页导航</p><p>幻灯片轮播图并加上链接</p><p>导航栏，并有下拉菜单，链接打不开注意url别名不能是中文，且可以为选项添加样式倒三角，在WP导航标签中设置HTML,或添加css类</p><p>页面对应模板文件page.php,文章对应模板文件是single.php</p><p>小工具的分类，作者归档功能对应archive.php模板文件</p><p>页面更相对静态，文章呈现动态</p><p>直接用菜单制作比小工具更容易，更美观。小工具其实就是小的导航栏</p><p>设置显示标题只一行，多的省略号表示</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>$category[0]-&gt;slug  $category[0]-&gt;cat_name 获取别名和分类名

<span class="token comment">&lt;!-- 设置参数  --&gt;</span>

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">set_query_var</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category&#39;</span><span class="token punctuation">,</span> <span class="token variable">$category</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>

<span class="token comment">&lt;!-- 另一页面接收参数  --&gt;</span>

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token variable">$category</span><span class="token operator">=</span><span class="token function">get_query_var</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;category&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>

截取文章内容 strpos 索引并返回位置  substr截取两位置间的内容

is_subpage() 获取父级页面ID

next_post_link  下一篇链接   默认按时间排序     

previous_post_link 上一篇链接

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">function_exists</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;bcn_display&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token function">bcn_display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span> <span class="token delimiter important">?&gt;</span></span>  面包屑导航
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开发感想" tabindex="-1"><a class="header-anchor" href="#开发感想" aria-hidden="true">#</a> 开发感想：</h3><p>css知识更加巩固熟练</p><p>运用了bootstrap布局</p><p>本次wp开发主题依靠wp后台没写js</p><h2 id="python爬虫-二三级链接获取" tabindex="-1"><a class="header-anchor" href="#python爬虫-二三级链接获取" aria-hidden="true">#</a> python爬虫 二三级链接获取</h2><h3 id="功能-3" tabindex="-1"><a class="header-anchor" href="#功能-3" aria-hidden="true">#</a> 功能：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 数据分割</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    url_type <span class="token operator">=</span> item<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;该数据异常，不添加，url=&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
    <span class="token keyword">continue</span>

<span class="token comment"># 链接去重</span>
<span class="token keyword">def</span> <span class="token function">del_repeat_url</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    new_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> item <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        <span class="token keyword">if</span> item <span class="token keyword">not</span> <span class="token keyword">in</span> new_data<span class="token punctuation">:</span>
            new_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">return</span> new_data

<span class="token comment"># 筛选链接</span>
<span class="token keyword">def</span> <span class="token function">select_url</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment"># 字典里的值变为列表</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;&lt;class &#39;dict&#39;&gt;&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> value <span class="token keyword">in</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> value

    <span class="token comment"># 遍历筛选</span>
    url_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> item <span class="token keyword">in</span> data<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            url_type <span class="token operator">=</span> item<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;该数据异常，url=&#39;</span><span class="token punctuation">,</span> item<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>
        lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;ico&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;exe&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;png&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;jpg&#39;</span><span class="token punctuation">]</span>
        flag <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token keyword">for</span> value <span class="token keyword">in</span> lst<span class="token punctuation">:</span>
            <span class="token keyword">if</span> url_type <span class="token operator">==</span> value<span class="token punctuation">:</span>
                flag <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">if</span> flag<span class="token punctuation">:</span>
            url_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>
    <span class="token keyword">return</span> url_data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="收获-2" tabindex="-1"><a class="header-anchor" href="#收获-2" aria-hidden="true">#</a> 收获：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>学会封装代码，明白函数要有独立性，功能单一性，
避免在里面使用全局变量，最多当参数传递。如此逻辑才清晰，效率更高
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>能读取和写入excel文件，日后可参考使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="php-团委物资系统" tabindex="-1"><a class="header-anchor" href="#php-团委物资系统" aria-hidden="true">#</a> PHP 团委物资系统</h2><h3 id="动态修改库存" tabindex="-1"><a class="header-anchor" href="#动态修改库存" aria-hidden="true">#</a> 动态修改库存</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>问题：根据dom元素值获取对应数据

方案:   dom元素操控用js，数据获取用ajax请求后端，创建个新的php文件作为后端，
里面进行逻辑处理，然后输出数据，js再渲染到页面上
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改借走时间样式不改变" tabindex="-1"><a class="header-anchor" href="#修改借走时间样式不改变" aria-hidden="true">#</a> 修改借走时间样式不改变</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>问题：修改对应的css文件没反应
原因：大概为浏览器缓存问题，仅ctrl+f5仍不可解决，要删除文件看看效果是否没了再还原，让浏览器重新找下
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="thinkphp-设备借还系统" tabindex="-1"><a class="header-anchor" href="#thinkphp-设备借还系统" aria-hidden="true">#</a> ThinkPHP 设备借还系统</h2><h2 id="django-网页开发-bug整理平台" tabindex="-1"><a class="header-anchor" href="#django-网页开发-bug整理平台" aria-hidden="true">#</a> Django 网页开发 bug整理平台</h2><h3 id="功能-4" tabindex="-1"><a class="header-anchor" href="#功能-4" aria-hidden="true">#</a> 功能</h3><p>搭建虚拟环境</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 安装插件</span>
pip intall virtualenv
<span class="token comment"># 搭建环境命令  mydemo:目录文件夹  --python=python3.8：环境python版本</span>
virtualenv mydemo <span class="token operator">-</span><span class="token operator">-</span>python<span class="token operator">=</span>python3<span class="token punctuation">.</span><span class="token number">8</span>  
<span class="token comment"># 激活</span>
cd到Script目录，命令： <span class="token punctuation">.</span>\\activate
<span class="token comment"># 退出</span>
cd到Script目录，命令： <span class="token punctuation">.</span>\\deactivate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出本地配置</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>pip freeze &gt; requirements.txt   # 把配置写入txt中
pip install -r requirements.txt  # 安装所有对应安装包
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="beego开发-企业管理模块后台" tabindex="-1"><a class="header-anchor" href="#beego开发-企业管理模块后台" aria-hidden="true">#</a> Beego开发 企业管理模块后台</h2><h3 id="收获-3" tabindex="-1"><a class="header-anchor" href="#收获-3" aria-hidden="true">#</a> 收获：</h3><p>使用orm操作数据库</p><p>MVC开发模式</p><p>json格式处理</p><p>前端渲染数据</p><h2 id="伴你成长-从零开发的微信小程序" tabindex="-1"><a class="header-anchor" href="#伴你成长-从零开发的微信小程序" aria-hidden="true">#</a> 伴你成长 从零开发的微信小程序</h2><h3 id="知识需要" tabindex="-1"><a class="header-anchor" href="#知识需要" aria-hidden="true">#</a> 知识需要：</h3><p>前端：vue uniapp 微信小程序</p><p>后端：beego</p><p>组件：view-ui(较少) vant color-ui</p><h3 id="功能-5" tabindex="-1"><a class="header-anchor" href="#功能-5" aria-hidden="true">#</a> 功能：</h3><h4 id="前后端交互" tabindex="-1"><a class="header-anchor" href="#前后端交互" aria-hidden="true">#</a> 前后端交互</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//前端 传输数据的post请求  ！！非Get请求要添加不同的请求头，默认为Get和Get的请求头  
// 添加目标分类
export function addCate(name, introduce) {
    return request({ url: api.addCate, data: { name, introduce }, method: &quot;POST&quot;, header: { &quot;Content-Type&quot;: &quot;application/x-www-form-urlencoded&quot; } })
}

//后端
// AddCate 添加分类
func (c *TargetController) AddCate() {
   name:=c.GetString(&quot;name&quot;)
   introduce:=c.GetString(&quot;introduce&quot;)
   fmt.Println(name,introduce)

   c.JsonResult(consts.JsonSuccess,&quot;ok&quot;,name)
}


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="感悟-1" tabindex="-1"><a class="header-anchor" href="#感悟-1" aria-hidden="true">#</a> 感悟：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>如果前端有数据则在前端处理，没必要后端多写个接口，要写接口和前后端的路由，走一整套流程，耗时费力
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="go-视频项目" tabindex="-1"><a class="header-anchor" href="#go-视频项目" aria-hidden="true">#</a> Go 视频项目</h2><h3 id="使用知识" tabindex="-1"><a class="header-anchor" href="#使用知识" aria-hidden="true">#</a> 使用知识：</h3><p>gin sql-server(原生mysql语法)</p><h3 id="特色" tabindex="-1"><a class="header-anchor" href="#特色" aria-hidden="true">#</a> 特色：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>有session完整流程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>有限流器，限制api访问数量，防止同一时间用户访问数量过多导致服务器崩溃
思路：
通过管道，当有用户访问时，向服务器请求token,然后带token向服务器请求需要的接口。每生成一个token，
在管道写入值，当管道长度超过定义的数量时，接口返回错误，以此限流
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>上传视频处理,使用阿里云
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scheduler 时间表
异步处理需要延迟的函数
运用管道和go程监听是否有任务写入或崩溃
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>脚本部署及代码部署
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,63);function h(m,b){const e=c("ExternalLinkIcon");return p(),i("div",null,[r,n("p",null,[n("a",u,[a("https://www.jianshu.com/p/51c25d126750"),l(e)])]),d,k,v])}const x=t(o,[["render",h],["__file","项目经验及总结.html.vue"]]);export{x as default};
