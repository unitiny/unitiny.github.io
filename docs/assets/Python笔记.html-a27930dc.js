import{_ as p,W as i,X as o,Y as n,Z as s,a0 as t,a2 as e,C as c}from"./framework-5d92cd28.js";const l="/typora-user-images/image-20210904094915194.png",u="/typora-user-images/image-20210904100928772.png",r="/typora-user-images/image-20210904110816079.png",d="/typora-user-images/image-20210904111356407.png",k={},m=n("h1",{id:"python笔记",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python笔记","aria-hidden":"true"},"#"),s(" Python笔记")],-1),v=n("h2",{id:"使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用","aria-hidden":"true"},"#"),s(" 使用：")],-1),b={href:"https://www.bilibili.com/read/cv9195219",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.bilibili.com/read/cv10106292/",target:"_blank",rel:"noopener noreferrer"},g=e(`<div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code># 创建django项目 

django-admin.py startproject projectname
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),_={href:"https://www.bilibili.com/video/BV1wD4y1o7AS",target:"_blank",rel:"noopener noreferrer"},f=e(`<h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法：</h2><h3 id="输入输出" tabindex="-1"><a class="header-anchor" href="#输入输出" aria-hidden="true">#</a> 输入输出：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>print()
input()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运算" tabindex="-1"><a class="header-anchor" href="#运算" aria-hidden="true">#</a> 运算：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Python <span class="token number">3.4</span><span class="token number">.1</span>
<span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1.5</span>
<span class="token number">3</span> <span class="token operator">//</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2.0</span> <span class="token operator">=</span> <span class="token number">1.5</span>
<span class="token number">3</span> <span class="token operator">//</span> <span class="token number">2.0</span> <span class="token operator">=</span> <span class="token number">1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>I like pyI like pyautogui</p><p>I like python too</p><p>Good like pyautogui.</p><h3 id="循环" tabindex="-1"><a class="header-anchor" href="#循环" aria-hidden="true">#</a> 循环：</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 简便
for item in range(1, 10):
    sum += item
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串：</h3><p>三引号字符串可以换行书写</p><p>有居中，左右对齐处理函数</p><p>有判断是否全为数字或字母的函数</p><p>也可以进行切片操作</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span> <span class="token keyword">in</span> name  关键字<span class="token builtin">str</span>是否在name中

<span class="token comment">#查询</span>
<span class="token builtin">str</span><span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token builtin">str</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#分割</span>
lst2 <span class="token operator">=</span> <span class="token string">&#39;Python| Worl|d&#39;</span>
lst4 <span class="token operator">=</span> lst2<span class="token punctuation">.</span>split<span class="token punctuation">(</span>sep<span class="token operator">=</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">,</span> maxsplit<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">#分割符，最大分割数</span>
<span class="token comment">#结果 [&#39;Python&#39;, &#39; Worl|d&#39;]</span>

<span class="token comment">#替换和加入</span>
lst2 <span class="token operator">=</span> <span class="token string">&#39;Python World&#39;</span>
lst3 <span class="token operator">=</span> lst2<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Java&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst3<span class="token punctuation">,</span> <span class="token string">&#39;|&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>lst2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#结果 Java World P|y|t|h|o|n| |W|o|r|l|d</span>

<span class="token comment">#strip(&quot;/&quot;) 去除字符串的/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="列表" tabindex="-1"><a class="header-anchor" href="#列表" aria-hidden="true">#</a> 列表：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>extend<span class="token punctuation">(</span><span class="token punctuation">[</span>列表<span class="token punctuation">]</span><span class="token punctuation">)</span> ，为数组添加多个元素

<span class="token builtin">str</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>variable<span class="token punctuation">)</span><span class="token punctuation">,</span>插入variable到数组<span class="token number">1</span>位置，

<span class="token builtin">str</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>variable<span class="token punctuation">)</span>  删除元素

<span class="token keyword">del</span> <span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  删除<span class="token number">1</span>位置的元素 

<span class="token builtin">str</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> 具体找百度

r <span class="token operator">=</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> 生成<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#查找索引值及切片</span>
lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;456&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> 
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#[&#39;world&#39;, &#39;456&#39;] </span>

<span class="token comment">#添加元素</span>
lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;456&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;末尾至少增加&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;一个元素&#39;</span><span class="token punctuation">]</span>
lst<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">&#39;末尾增加&#39;</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>list1<span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;随意插入位置&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>	
<span class="token comment">#结果[&#39;hello&#39;, &#39;随意插入位置&#39;, &#39;world&#39;, &#39;abc&#39;, &#39;456&#39;, &#39;末尾增加&#39;, &#39;末尾至少增加&#39;, &#39;一个元素&#39;]</span>


<span class="token comment">#删除元素</span>
lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;456&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#删除指定索引位置，默认末尾</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>
<span class="token comment">#结果 [&#39;hello&#39;, &#39;456&#39;]</span>
<span class="token builtin">list</span><span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#清空列表</span>
<span class="token builtin">list</span><span class="token punctuation">.</span><span class="token keyword">del</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#删除后要重新定义</span>

<span class="token comment">#排序</span>
lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">#集合 去重复元素，结果无序输出</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span> 
lst1 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>
lst2 <span class="token operator">=</span> <span class="token string">&#39;Python World&#39;</span>
lst3 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>lst2<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>lst1<span class="token punctuation">,</span> lst3<span class="token punctuation">)</span>
<span class="token comment">#结果 {1, 2, 3, 6} {&#39;h&#39;, &#39;n&#39;, &#39;P&#39;, &#39;y&#39;, &#39;o&#39;, &#39; &#39;, &#39;r&#39;, &#39;l&#39;, &#39;t&#39;, &#39;W&#39;, &#39;d&#39;}</span>

<span class="token comment"># a[-1]表示数组中最后一位，a[:-1]表示从第0位开始直到最后一位，a[::-1]表示倒序，从最后一位到第0位。</span>

<span class="token comment"># 定义长度列表    </span>
p<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>n
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),y={href:"https://blog.csdn.net/weixin_44457013/article/details/88097343",target:"_blank",rel:"noopener noreferrer"},x=e(`<h3 id="字典" tabindex="-1"><a class="header-anchor" href="#字典" aria-hidden="true">#</a> 字典</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Python json 模块dumps、dump、loads、load的使用
json<span class="token punctuation">.</span>dumps将python对象格式化成json字符（将<span class="token builtin">dict</span>转化成<span class="token builtin">str</span>）
json<span class="token punctuation">.</span>loads将json字符串解码成python对象（将<span class="token builtin">str</span>转化成<span class="token builtin">dict</span>）
json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span><span class="token punctuation">)</span>函数的使用，将json信息写进文件
json<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>函数的使用，将读取json信息

<span class="token keyword">del</span> self<span class="token punctuation">.</span><span class="token builtin">dict</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment"># 删除字典元素</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 输入函数</span>
var1<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;提示语&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 类型转化</span>
<span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 


<span class="token comment"># 可变的位置参数	不确定实参数数量时使用</span>
<span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
fun<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
fun<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>
<span class="token comment"># 可变的关键字参数</span>
<span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token operator">**</span>arg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>
func<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span>
func<span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span>
<span class="token comment">#结果 </span>
<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">}</span>
<span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">}</span>


<span class="token comment"># 将实参解析分配到形参 如列表 字典</span>
<span class="token keyword">def</span> <span class="token function">fun</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a=&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;b=&#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;c=&#39;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>a<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;a=&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;b=&#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;c=&#39;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
lst1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">}</span>
fun<span class="token punctuation">(</span><span class="token operator">*</span>lst<span class="token punctuation">)</span>
func<span class="token punctuation">(</span><span class="token operator">**</span>lst1<span class="token punctuation">)</span>
<span class="token comment">#结果</span>
a<span class="token operator">=</span> <span class="token number">10</span>
b<span class="token operator">=</span> <span class="token number">90</span>
c<span class="token operator">=</span> <span class="token number">8</span>
a<span class="token operator">=</span> <span class="token number">10</span>
b<span class="token operator">=</span> <span class="token number">20</span>
c<span class="token operator">=</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类" tabindex="-1"><a class="header-anchor" href="#类" aria-hidden="true">#</a> 类：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 创建</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span><span class="token punctuation">:</span>
    Sname <span class="token operator">=</span> <span class="token string">&#39;大帅&#39;</span>

    <span class="token comment"># 初始化</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name
        self<span class="token punctuation">.</span>age <span class="token operator">=</span> age
        self<span class="token punctuation">.</span>__sex<span class="token operator">=</span><span class="token string">&#39;男&#39;</span>  <span class="token comment">#私有属性</span>

    <span class="token comment"># 实例方法</span>
    <span class="token keyword">def</span> <span class="token function">eat</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;实例方法&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># 静态方法</span>
    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">learn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;静态方法&#39;</span><span class="token punctuation">)</span>

    <span class="token comment"># 类方法</span>
    <span class="token decorator annotation punctuation">@classmethod</span>
    <span class="token keyword">def</span> <span class="token function">action</span><span class="token punctuation">(</span>cls<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;类方法&#39;</span><span class="token punctuation">)</span>

<span class="token comment">#使用</span>
stu <span class="token operator">=</span> Student<span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span>
stu<span class="token punctuation">.</span>eat<span class="token punctuation">(</span><span class="token punctuation">)</span>
stu<span class="token punctuation">.</span>learn<span class="token punctuation">(</span><span class="token punctuation">)</span>
stu<span class="token punctuation">.</span>action<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>name<span class="token punctuation">,</span> stu<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>__dict__<span class="token punctuation">)</span> <span class="token comment">#类的属性</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>__class__<span class="token punctuation">)</span> <span class="token comment">#输出所属类</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span>__bases__<span class="token punctuation">)</span> <span class="token comment">#实例对象的父类</span>
<span class="token comment">#调用父类</span>
<span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>father<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#调用父类father的info方法 </span>
<span class="token comment">#特殊方法</span>
__len__<span class="token punctuation">(</span><span class="token punctuation">)</span> 通过重写__1en__<span class="token punctuation">(</span><span class="token punctuation">)</span>方法<span class="token punctuation">,</span>让内置函数1en<span class="token punctuation">(</span><span class="token punctuation">)</span>的参数可以是自定义类型 
__add__<span class="token punctuation">(</span><span class="token punctuation">)</span> 通过重写__add__<span class="token punctuation">(</span><span class="token punctuation">)</span>方法<span class="token punctuation">,</span>可使用自定义对象具有<span class="token string">&quot;+&quot;</span>功能 
__new__<span class="token punctuation">(</span><span class="token punctuation">)</span> 用于创建对象 
__init__<span class="token punctuation">(</span><span class="token punctuation">)</span> 对创建的对象进行初始化

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="模块" tabindex="-1"><a class="header-anchor" href="#模块" aria-hidden="true">#</a> 模块：</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 导入</span>
<span class="token keyword">import</span> math <span class="token comment">#from math import pi,ceil</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>pi<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token number">9.001</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+'" alt="image-20210904094915194" tabindex="0" loading="lazy"><figcaption>image-20210904094915194</figcaption></figure><h3 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件：</h3><figure><img src="'+u+`" alt="image-20210904100928772" tabindex="0" loading="lazy"><figcaption>image-20210904100928772</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># os</span>
<span class="token keyword">import</span> os

os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;notepad.exe&#39;</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;calc.exe&#39;</span><span class="token punctuation">)</span>
os<span class="token punctuation">.</span>startfile<span class="token punctuation">(</span><span class="token string">&#39;C:\\\\Users\\\\20692\\\\Desktop\\\\QQ - 快捷方式.lnk&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="image-20210904110816079" tabindex="0" loading="lazy"><figcaption>image-20210904110816079</figcaption></figure><figure><img src="'+d+`" alt="image-20210904111356407" tabindex="0" loading="lazy"><figcaption>image-20210904111356407</figcaption></figure><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他：</h3><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>type(variable) 输出变量类型 

isinstance(variable,int) 判断变量与右边数据类型是否匹配

a is b 判断标识符id是否一致,比较的是空间地址，更为严谨

not 相当于！,python中没有!

[]列表  {}字典	()元组 

encode() 编码		decode() 解码

Python异常处理机制：try ... except ... else ... finally ...

map() 会根据提供的函数对指定序列做映射。
第一个参数 function 以参数序列中的每一个元素调用 function 函数，
返回包含每次 function 函数返回值的新列表。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能：</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">eval</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将字符串转化为字典</span>
<span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token string">&#39;pow(2,2)&#39;</span><span class="token punctuation">)</span> 	<span class="token comment">#结果4，eval() 函数用来执行一个字符串表达式，并返回表达式的值。</span>
<span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		<span class="token comment">#转化字符串为字典</span>

<span class="token comment">#按学号降序排序</span>
student_new<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span> <span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token string">&#39;stu_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>reverse<span class="token operator">=</span>asc_or_desc_bool<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打包生成exe文件" tabindex="-1"><a class="header-anchor" href="#打包生成exe文件" aria-hidden="true">#</a> 打包生成exe文件：</h3>`,19),w={href:"https://www.bilibili.com/video/BV1wD4y1o7AS?p=145&spm_id_from=pageDriver",target:"_blank",rel:"noopener noreferrer"},j=e(`<h3 id="pip升级包" tabindex="-1"><a class="header-anchor" href="#pip升级包" aria-hidden="true">#</a> pip升级包</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pip install --upgrade package_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题：</h2><h3 id="解决cmd-python-v-没有版本信息输出问题" tabindex="-1"><a class="header-anchor" href="#解决cmd-python-v-没有版本信息输出问题" aria-hidden="true">#</a> 解决cmd python -v 没有版本信息输出问题</h3>`,4),P={href:"https://blog.csdn.net/weixin_43983286/article/details/103988748",target:"_blank",rel:"noopener noreferrer"},q=n("h3",{id:"pip不存在",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pip不存在","aria-hidden":"true"},"#"),s(" pip不存在：")],-1),D={href:"https://jingyan.baidu.com/article/a3f121e486ff87fc9052bbe8.html",target:"_blank",rel:"noopener noreferrer"},E=e('<h3 id="编码错误" tabindex="-1"><a class="header-anchor" href="#编码错误" aria-hidden="true">#</a> 编码错误：</h3><p>报错</p><p>SyntaxError: Non-UTF-8 code starting with ‘x/90’</p><p>解决</p><p>1 文件首行添加#coding=utf-8</p><p>2 更改文件名，不知原理但能有效</p><h3 id="变量赋值" tabindex="-1"><a class="header-anchor" href="#变量赋值" aria-hidden="true">#</a> 变量赋值：</h3><p>报错</p><p>local variable &#39;a&#39; referenced before assignment</p><p>解决</p>',10),V={href:"https://blog.csdn.net/qq_38161040/article/details/87918349",target:"_blank",rel:"noopener noreferrer"},W=e(`<h3 id="输入问题" tabindex="-1"><a class="header-anchor" href="#输入问题" aria-hidden="true">#</a> 输入问题：</h3><p>报错</p><p>ValueError: invalid literal for int() with base 10: &#39;&#39;</p><p>代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>choose <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请选择：&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>原因：</p><p>输入了非数字字符串，而int()只能转化数字字符串为整数</p><p>解决：</p><p>去掉int,或注意输入</p><h3 id="字典使用问题" tabindex="-1"><a class="header-anchor" href="#字典使用问题" aria-hidden="true">#</a> 字典使用问题：</h3><p>报错：TypeError: string indices must be integers, not str</p><p>解决：</p>`,12),S={href:"https://blog.csdn.net/outman_1921/article/details/109560307",target:"_blank",rel:"noopener noreferrer"},B=e(`<h3 id="使用类方法报错self参数未填" tabindex="-1"><a class="header-anchor" href="#使用类方法报错self参数未填" aria-hidden="true">#</a> 使用类方法报错self参数未填</h3><p>报错：TypeError: delete_url() missing 1 required positional argument: &#39;self&#39;</p><p>原因：使用类时漏了括号，于是不会默认传递参数self</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>url_data<span class="token punctuation">.</span>get_urls <span class="token operator">=</span> DealData<span class="token punctuation">.</span>delete_url<span class="token punctuation">(</span>data<span class="token operator">=</span>url_data<span class="token punctuation">.</span>get_urls<span class="token punctuation">)</span> <span class="token comment">#问题代码</span>
url_data<span class="token punctuation">.</span>get_urls <span class="token operator">=</span> DealData<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>delete_url<span class="token punctuation">(</span>data<span class="token operator">=</span>url_data<span class="token punctuation">.</span>get_urls<span class="token punctuation">)</span> <span class="token comment">#需要加括号</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文件操纵使用encoding报错" tabindex="-1"><a class="header-anchor" href="#文件操纵使用encoding报错" aria-hidden="true">#</a> 文件操纵使用encoding报错</h3><p>报错：ValueError: binary mode doesn&#39;t take an encoding argument</p>`,6),I={href:"https://blog.csdn.net/qq_41752647/article/details/99976720",target:"_blank",rel:"noopener noreferrer"},N=e('<h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h2><p>str=r”d:\\ndfa\\aa” 加上r可以对所有\\转义</p><p>使用random 需要引入库 import random</p><p>元组和列表相似，只是里边元素不能修改</p><p>/ 整数除法 // 浮点数除法</p><p>函数返回值多个时，返回值类型是元组</p><p>写入文件中要注意字符串化，提取后要记得转化为需要的格式</p><p>判断== 是需要数据类型也相同的</p><p>错误：</p><p>项目区变黄块，把idea文件夹删了重启pycharm</p>',10);function z(T,C){const a=c("ExternalLinkIcon");return i(),o("div",null,[m,v,n("p",null,[n("a",b,[s("pycharm激活码"),t(a)])]),n("p",null,[n("a",h,[s("激活码2"),t(a)])]),g,n("p",null,[n("a",_,[s("教程"),t(a)])]),f,n("p",null,[n("a",y,[s("关于Python数组中-1的用法"),t(a)])]),x,n("p",null,[n("a",w,[s("教程"),t(a)])]),j,n("p",null,[n("a",P,[s("网址"),t(a)])]),q,n("p",null,[n("a",D,[s("网址"),t(a)])]),E,n("p",null,[n("a",V,[s("网址"),t(a)])]),W,n("p",null,[n("a",S,[s("网址"),t(a)])]),B,n("p",null,[s("原因："),n("a",I,[s("https://blog.csdn.net/qq_41752647/article/details/99976720"),t(a)])]),N])}const J=p(k,[["render",z],["__file","Python笔记.html.vue"]]);export{J as default};
