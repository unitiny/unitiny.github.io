import{_ as p,W as o,X as c,$ as i,Y as n,Z as s,a0 as t,a2 as e,C as l}from"./framework-5d92cd28.js";const u={},r=n("hr",null,null,-1),d=n("p",null,"title: ThinkPHP5.1 date: 2021-08-10 sidebar: 'auto' categories:",-1),k=n("ul",null,[n("li",null,"后端 tags:"),n("li",null,"Think-PHP")],-1),g=n("hr",null,null,-1),v=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Tips"),n("p",null,"PHP 的大哥，不太好惹")],-1),m=n("hr",null,null,-1),b=n("h2",{id:"使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用","aria-hidden":"true"},"#"),s(" 使用：")],-1),h={href:"https://www.kancloud.cn/manual/thinkphp5_1/353948",target:"_blank",rel:"noopener noreferrer"},f=e(`<p>在 www 目录 下 cmd 执行 composer 命令</p><p>PHPstudy 新建网址，要点同步 host 才能打开。只修改网址名和根目录仍会报错，提示网址找不到</p><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法：</h2><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>//查询长度
$length = count($res);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> model：</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">//findOrEmpty()查询不到返回空数组 findOrFail()查询不到抛出错误 select同理</span>

<span class="token comment">//select 查询多条数据   find 查询一条数据</span>

<span class="token variable">$data2</span><span class="token operator">=</span><span class="token function"><span class="token punctuation">\\</span>db</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 查询关键字，默认find()查询一条</span>

<span class="token function">removeOption</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;where&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 移除上次查询保留的数据库对象信息</span>

<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tp_user&#39;</span><span class="token punctuation">)</span>   <span class="token comment">// 不会加上前缀名</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span>	   <span class="token comment">// 自动加上前缀名</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">db</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	   <span class="token comment">// inc dec 增减计算</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">dec</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$data</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;username&#39;</span>  <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">&#39;李白&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;password&#39;</span>  <span class="token operator">=&gt;</span>  <span class="token string single-quoted-string">&#39;456&#39;</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;email&#39;</span>     <span class="token operator">=&gt;</span>  <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;UPPER(email)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;price&#39;</span>     <span class="token operator">=&gt;</span>  <span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">raw</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price-3&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// data 中直接修改值，更方便</span>

<span class="token variable">$res1</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">whereBetween</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	  <span class="token comment">// 区间查询</span>
<span class="token variable">$res2</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">whereExp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;In(19,21,25)&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 自定义查询</span>
<span class="token comment">// 查询字段email里含有xiao%的,whereNotLike相反</span>
<span class="token variable">$res</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">whereLike</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;xiao%&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$res3</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">whereBetweenTime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;create_time&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;2016-09-28 22:07:38&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;2019-09-20 22:01:42&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 时间区间查询</span>

<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;uid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 计算该字段数量</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 计算字段最大值，字符串也适用</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 计算字段最小值</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">avg</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 计算字段平均值</span>
<span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;price&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>			<span class="token comment">// 计算字段总和</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 子查询 两张表间连结</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// buildSql返回sql语句  field要返回的结果数据  where查询条件</span>
    <span class="token variable">$query</span><span class="token operator">=</span><span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;two&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;uid&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">buildSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$res</span><span class="token operator">=</span><span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;one&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">whereExp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;In &#39;</span><span class="token operator">.</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token comment">// 闭包子查询 更方便</span>
     <span class="token variable">$res</span><span class="token operator">=</span><span class="token class-name static-context">Db</span><span class="token operator">::</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tp_one&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;in&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;tp_two&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;uid&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;gender&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 以下都在model中定义</span>
<span class="token comment">// 获取器：获取数据库数据，自定义一个呈现样式。</span>
<span class="token comment">// get * Attr , *代表获取的字段名,get和Attr是固定的</span>
<span class="token keyword">public</span>  <span class="token keyword">function</span>  <span class="token function-definition function">getStatusAttr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token variable">$myget</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;删除&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;禁用&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;正常&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;待审核&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token variable">$myget</span><span class="token punctuation">[</span><span class="token variable">$value</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 修改器 数据入库时对数据操作</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setEmailAttr</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 搜索器 模糊查询 $query 查询字段</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">searchEmailAttr</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;like&#39;</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;%&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">searchCreateTimeAttr</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token variable">$query</span><span class="token operator">-&gt;</span><span class="token function">whereBetweenTime</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;create_time&#39;</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 搜索器在controller中使用</span>
<span class="token comment">// 搜索器</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token variable">$user</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$res</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">withSearch</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;create_time&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;xiao&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;create_time&#39;</span><span class="token operator">=&gt;</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;2016-06-27&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;2018-12-11&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 联式查询</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// 显示的形式，此截取了email靠左的五个字符</span>
    <span class="token variable">$res</span><span class="token operator">=</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;LEFT(email,5)&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;leftemail&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 不显示某些的字段</span>
    <span class="token variable">$res</span><span class="token operator">=</span><span class="token function">db</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">field</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;uid&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="view" tabindex="-1"><a class="header-anchor" href="#view" aria-hidden="true">#</a> view :</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 获取数据输出view</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token variable">$data</span><span class="token operator">=</span><span class="token class-name static-context">UserModel</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;list&#39;</span><span class="token punctuation">,</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// list为html的数据名</span>
    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;loop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// templete.php中定义模板文件，但通常用extend继承板块</span>
<span class="token string single-quoted-string">&#39;layout_on&#39;</span>    <span class="token operator">=&gt;</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span>
<span class="token string single-quoted-string">&#39;layout_name&#39;</span>  <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;public/layout&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法：</h3>`,13),q={href:"https://blog.csdn.net/XUAN0321/article/details/120415273",target:"_blank",rel:"noopener noreferrer"},x=e(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 调用当前控制器里方法</span>
<span class="token variable">$nums</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getstates</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 方法前置</span>
<span class="token keyword">protected</span> <span class="token variable">$beforeActionList</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;first&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;second&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;expect&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//除了index方法里不执行</span>
    <span class="token string single-quoted-string">&#39;third&#39;</span>  <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;only&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;index&#39;</span><span class="token punctuation">]</span>    <span class="token comment">//只有设置的index方法执行</span>
<span class="token punctuation">]</span>

<span class="token comment">// 跳转类</span>
<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">flag</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;注册成功&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;../&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;失败&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;hello&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">redirect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/index/index/hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 跳转页面</span>
<span class="token function">download</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;a.jpg&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;myname&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 下载图片</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 调用Login文件的isLogin方法</span>
<span class="token class-name static-context">Login</span><span class="token operator">::</span><span class="token function">isLogin</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路由" tabindex="-1"><a class="header-anchor" href="#路由" aria-hidden="true">#</a> 路由:</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">parram</span><span class="token operator">-&gt;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 获取请求参数</span>

<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token constant">get</span> <span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token constant">rule</span>  都是设置Controller下的路由
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token constant">view</span> 		可设置view下的路由，并可在view中获取路由参数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="类属性" tabindex="-1"><a class="header-anchor" href="#类属性" aria-hidden="true">#</a> 类属性</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>public 表示全局，类内部外部都能访问；
private 表示私有的，只有本类内部可以使用；
proteced 表示受保护的，只有本类或子类或父类中可以访问；
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置" aria-hidden="true">#</a> 环境变量配置</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://www.kancloud.cn/manual/thinkphp6_0/1037484
可以把根目录的.example.env改为.env即可使用
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="session" tabindex="-1"><a class="header-anchor" href="#session" aria-hidden="true">#</a> Session</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code>https<span class="token punctuation">:</span><span class="token comment">//www.kancloud.cn/manual/thinkphp6_0/1037635</span>

<span class="token comment">// 如果值不存在，返回null</span>
<span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 如果值不存在，返回空字符串</span>
<span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 获取全部数据</span>
<span class="token class-name static-context">Session</span><span class="token operator">::</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能：</h2><h3 id="js获取后端变量以及session" tabindex="-1"><a class="header-anchor" href="#js获取后端变量以及session" aria-hidden="true">#</a> js获取后端变量以及session</h3>`,13),w={href:"https://blog.csdn.net/qq_18089765/article/details/119151543",target:"_blank",rel:"noopener noreferrer"},_=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>变量加上单引号即可：
var name =\${name}&#39;
获取session的方法:
var userid = &#39;{$Request.session.user}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题：</h2><h3 id="不能绕过-index-php-进入模块" tabindex="-1"><a class="header-anchor" href="#不能绕过-index-php-进入模块" aria-hidden="true">#</a> 不能绕过 index.php 进入模块</h3>`,3),$={href:"https://blog.csdn.net/weixin_39918928/article/details/115239377",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"有时需要 public 下的.htaccess 也要粘贴",-1),P=n("h3",{id:"function-get-magic-quotes-gpc-is-deprecated",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#function-get-magic-quotes-gpc-is-deprecated","aria-hidden":"true"},"#"),s(" Function get_magic_quotes_gpc() is deprecated")],-1),D={href:"http://www.thinkphp.cn/topic/7572.html",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"function-get-magic-quotes-runtime-is-deprecated",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#function-get-magic-quotes-runtime-is-deprecated","aria-hidden":"true"},"#"),s(" Function get_magic_quotes_runtime() is deprecated")],-1),S={href:"https://blog.csdn.net/nstwolf/article/details/5806616",target:"_blank",rel:"noopener noreferrer"},T=e(`<p>创建的 php class 的图标不一样，且代码颜色灰色</p><p>原因：文件名首字母最好大写（控制器），且更改类名与文件名一致，图标即可变为 c 字符</p><h3 id="写入路由但仍显示路由未定义" tabindex="-1"><a class="header-anchor" href="#写入路由但仍显示路由未定义" aria-hidden="true">#</a> 写入路由但仍显示路由未定义</h3><p>原因：路由写成Route::post无法访问,这是因为定义的post请求路由，只能通过post请求，直接输地址会认为是路由未定义</p><p>解决：改成get试试</p><h3 id="网上拉取的项目无法打开" tabindex="-1"><a class="header-anchor" href="#网上拉取的项目无法打开" aria-hidden="true">#</a> 网上拉取的项目无法打开</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>报错 ：Warning: require
(D:\\PHP\\phpstudy_pro\\WWW\\loanReturnSystem\\public/../vendor/autoload.php): 
failed to open stream: No such file or directory in
D:\\PHP\\phpstudy_pro\\WWW\\loanReturnSystem\\public\\index.php on line 15

原因：composer要更新

解决：https://www.tpxhm.com/adetail/387.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="no-input-file-specified" tabindex="-1"><a class="header-anchor" href="#no-input-file-specified" aria-hidden="true">#</a> No input file specified.</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>问题：public下.htaccess配置出错
解决：https://www.cnblogs.com/init-007/p/13236152.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vender-缺失-环境改变无法运行" tabindex="-1"><a class="header-anchor" href="#vender-缺失-环境改变无法运行" aria-hidden="true">#</a> /vender/缺失，环境改变无法运行</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>把/vender/下的composer文件夹删除，再composer install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意：</h2><h3 id="配置文件更改" tabindex="-1"><a class="header-anchor" href="#配置文件更改" aria-hidden="true">#</a> 配置文件更改：</h3><p>如果更改了配置文件不起作用，务必把 runtime 下面的 temp 文件删除再刷新</p><h3 id="注释方式" tabindex="-1"><a class="header-anchor" href="#注释方式" aria-hidden="true">#</a> 注释方式：</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token punctuation">{</span><span class="token variable">$name</span><span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">&gt;</span> <span class="token comment">// 仍会执行php</span>
<span class="token punctuation">{</span><span class="token comment">//$name}	   // 不执行php,//不得与{有空格</span>
<span class="token punctuation">{</span><span class="token comment">/*$name*/</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自动写入时间戳字段" tabindex="-1"><a class="header-anchor" href="#自动写入时间戳字段" aria-hidden="true">#</a> 自动写入时间戳字段</h3><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;auto_timestamp&#39;</span>  <span class="token operator">=&gt;</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span>
<span class="token comment">//改为true会有未知bug，不了解</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function L(N,A){const a=l("ExternalLinkIcon");return o(),c("div",null,[r,d,k,g,v,i(" more "),m,b,n("p",null,[n("a",h,[s("搭建"),t(a)])]),f,n("p",null,[n("a",q,[s("静态和动态方法"),t(a)])]),x,n("p",null,[n("a",w,[s("网址"),t(a)])]),_,n("p",null,[n("a",$,[s("办法看这里"),t(a)])]),y,P,n("p",null,[n("a",D,[s("查看"),t(a)])]),E,n("p",null,[n("a",S,[s("查看"),t(a)])]),T])}const W=p(u,[["render",L],["__file","TP.html.vue"]]);export{W as default};
